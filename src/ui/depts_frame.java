/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ui;

import ca.odell.glazedlists.GlazedLists;
import ca.odell.glazedlists.swing.AutoCompleteSupport;
import classes.ColumnResizer;
import classes.labelRenderer;
import classes.superCls;
import custom_jPanels.RoundRectGradientPanel;
import farm.entity.DtBankAccounts;
import farm.entity.DtDepartment;
import farmTech.util.HibernateUtil;
import static java.lang.Math.random;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 *
 * @author Kent
 */
public class depts_frame extends javax.swing.JInternalFrame {

    /**
     * Creates new form depts_frame
     */
    superCls sup=new superCls();
    DtDepartment depts;
    private JLabel errorFields;
    private Object[] id;
    private DefaultTableModel farmer_model;
    private AutoCompleteSupport type=null,acs=null;
    
    public depts_frame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new RoundRectGradientPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtcode = new javax.swing.JTextField();
        cmb_dept = new javax.swing.JComboBox();
        txt_acc = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        txtadmin = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtphone = new javax.swing.JTextField();
        txtadd = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setTitle("Departments Registration");
        setToolTipText("");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ox-cow.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel1.setText("Dept/Project Name :");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel2.setText("Code :");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel3.setText("Bank name");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel4.setText("Account No.");

        txtcode.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        txtcode.setToolTipText("");

        cmb_dept.setEditable(true);
        cmb_dept.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        cmb_dept.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmb_dept.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_deptItemStateChanged(evt);
            }
        });

        txt_acc.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel6.setText("Tax Id :");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel7.setText("Administrator :");

        txtid.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        txtid.setToolTipText("");

        txtadmin.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        txtadmin.setToolTipText("");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel5.setText("Phone No.");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel8.setText("Address :");

        txtphone.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        txtphone.setToolTipText("");

        txtadd.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        txtadd.setToolTipText("");

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Recode", "Dept_Id", "Bank", "Account", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(204, 204, 204));
        jTable1.setRowHeight(17);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jButton2.setText("New");

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jButton3.setText("Save");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jButton4.setText("Delete");

        jComboBox1.setEditable(true);
        jComboBox1.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N

        jLabel9.setForeground(new java.awt.Color(255, 0, 51));
        jLabel9.setText("*");

        jLabel10.setForeground(new java.awt.Color(255, 0, 51));
        jLabel10.setText("*");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(69, 69, 69)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_acc, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(cmb_dept, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtid, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel8)
                                                    .addComponent(jLabel2))
                                                .addGap(34, 34, 34))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtadd, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                            .addComponent(txtadmin)
                                            .addComponent(txtcode)))
                                    .addComponent(txtphone, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 145, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cmb_dept, txtid, txtphone});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel10))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel9))
                    .addComponent(txtcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_dept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtadmin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtadd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtphone, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(30, 30, 30)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_acc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(10, 10, 10)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(20, 20, 20))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
        String deptName=sup.getValue(cmb_dept.getSelectedItem());
        String code=txtcode.getText();
        String address= txtadd.getText();
        String admin= txtadmin.getText();
        String Taxid=  txtid.getText();
        String phone= txtphone.getText();        
        if(!deptName.equals("") && !code.equals("")){
           if(this.dept_save(code, deptName, Taxid, admin, phone, address)){
               List list= Arrays.asList(model);
               if(!list.isEmpty()){
                   for(int i=0;i<model.getRowCount();i++){
                       String g_id=sup.getValue(model.getValueAt(i, 1));
                       String bank=sup.getValue(model.getValueAt(i, 2));
                       String account=sup.getValue(model.getValueAt(i, 3));
                       if(!g_id.equals("")){                
                          this.save_account(Integer.parseInt(g_id), code, bank,account ); 
                          model.setRowCount(0);
                        }
                    }
           }
        }
       }else{
            
      }       
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int i=(int) random()*50+1;
        String dept_id=txtcode.getText();
        String bankname=sup.getValue(jComboBox1.getSelectedItem());
        String account=txt_acc.getText();
        if(!dept_id.equals("")){
                 
                 Object[] elements = new Object[] {i,dept_id, bankname, account,"edit","remove"};
               
                 DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
                 model.addRow(elements);
                 jTable1.setModel(model);
        }else{
            errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Please Make sure required fields are filled</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE); 
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int row=jTable1.getSelectedRow();
        int col=jTable1.getSelectedColumn();
        DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
        int idno=Integer.parseInt(sup.getIntValue(model.getValueAt(row, 0))); 
        if(idno!=0){
            switch(col){
                case 5:
                    del_acc(idno);                            
                    model.removeRow(row);
                    break;
                default:
                    break;
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void cmb_deptItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_deptItemStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmb_deptItemStateChanged

    private boolean del_acc(int id){
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
       Transaction tx = null;
       boolean status=false;
      try{
         tx = session.beginTransaction();
         DtBankAccounts acc = (DtBankAccounts)session.get(DtBankAccounts.class, id); 
         if(acc!=null)
            session.delete(acc);
         tx.commit();
         status=true;
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE); 
      }finally {
         session.close(); 
      }
     return status;
   }

    public void formload(){
//        this.userid=userid;
        resetfields();  
        DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
       try{
         if(type==null||!type.isInstalled()){
            type=AutoCompleteSupport.install(cmb_dept, GlazedLists.eventListOf(sup.getElements(depts())));  
            acs=AutoCompleteSupport.install(jComboBox1, GlazedLists.eventListOf(sup.getElements(accs())));  
         }
         }catch(Exception ex){
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+ex.getMessage()+"'</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE);                  
         }
    }
    
    private DefaultComboBoxModel depts () {                 
       int i=0;
       DefaultComboBoxModel tmodel =new DefaultComboBoxModel();
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
      try {        
           session.beginTransaction();
           Query q = session.createQuery("Select dept.id,dept.deptName from DtDepartment dept");
           List<Object[]> rows = q.list();
           id=new Object[rows.size()];
           for(Object[] row : rows){ 
               id[i]=row[0];
               tmodel.addElement(row[1]);                  
               i++;         
           }
           session.getTransaction().commit();
         }catch (HibernateException he) {
                 errorFields = new JLabel("<HTML><FONT COLOR = Blue>'"+he.getMessage()+"'</FONT></HTML>");
                 JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE);

         }finally {
             session.close(); 
         }
          return tmodel;
    }
    
    private DefaultComboBoxModel accs () {                 
       int i=0;
       DefaultComboBoxModel tmodel =new DefaultComboBoxModel();
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
      try {        
           session.beginTransaction();
           Query q = session.createQuery("Select Distinct acc.bankName,acc.id from DtBankAccounts acc");
           List<Object[]> rows = q.list();
           for(Object[] row : rows){ 
                 tmodel.addElement(row[0]);      
           }
           session.getTransaction().commit();
         }catch (HibernateException he) {
                 errorFields = new JLabel("<HTML><FONT COLOR = Blue>2'"+he.getMessage()+"'</FONT></HTML>");
                 JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE);

         }finally {
             session.close(); 
         }
          return tmodel;
    }
    
    public void dept_Search(int id ){
       Session session = HibernateUtil.getSessionFactory().openSession();
       Transaction tx = null;
      try{
         tx = session.beginTransaction();
          depts= (DtDepartment)session.get(DtDepartment.class, id);
          tx.commit();
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
               errorFields = new JLabel("<HTML><FONT COLOR = Blue>'"+e.getMessage()+"'</FONT></HTML>");
               JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE);
      }finally {
         session.close(); 
      }
   }
    
    public void fillfields(){
     txtcode.setText(depts.getCode());
     txtadd.setText(depts.getAddress());
     txtadmin.setText(depts.getAdmin());
     txtid.setText(depts.getTaxId());
     txtphone.setText(depts.getPhone());
     acc_display(1,depts.getId(),0);
     jTable1.setModel(farmer_model);
     SwingUtilities.invokeLater(new Runnable() {
            public void run() {
            jTable1.getColumnModel().getColumn(4).setCellRenderer( new  labelRenderer());
            jTable1.getColumnModel().getColumn(5).setCellRenderer( new  labelRenderer());
            ColumnResizer.adjustColumnPreferredWidths (jTable1);
            jTable1.revalidate();
         }});
    }
    
    public void resetfields(){
     txtcode.setText("");
     txtadd.setText("");
     txtadmin.setText("");
     txtid.setText("");
     txtphone.setText("");
    }
    
   public void acc_display(int val,int id,int upperlimit) {
    try {
        String hql;
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        switch(val){
            case 0:
                hql="from DtBankAccounts c order by c.id asc";
                break;  
                        
            case 1:
                hql="from DtBankAccounts c WHERE c.deptId=:id order by id desc";
                break;
            default:
                hql="from DtBankAccounts c order by c.id asc";
                break;        
    }
        Query q = session.createQuery(hql);    
        if(val==1)
            q.setParameter("id", id);
        q.setFirstResult(upperlimit);
        q.setMaxResults(30);
        List resultList = q.list();
        displayResult(resultList);
        session.getTransaction().commit();
    } catch (HibernateException he) {
         errorFields = new JLabel("<HTML><FONT COLOR = Blue>'"+he.getMessage()+"'</FONT></HTML>");
         JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE);
//            he.printStackTrace();
    }
}
    
    private void displayResult(List resultList) {
    Vector tableData = new Vector();
//    total=0.0;
    String header[]={"Record","Dept_Id","Bank Name","Account","",""};
    Vector<String> tableHeaders= new Vector<>();
    tableHeaders.addAll(Arrays.asList(header));
    for(Object o : resultList) {
        
        DtBankAccounts collection = (DtBankAccounts)o;
        Vector<Object> oneRow = new Vector<>();
        List col=Arrays.asList(collection.getId(),
                               collection.getDeptId(),
                               collection.getBankName(),
                               collection.getAccount(),
                               "edit",
                               "delete");
//        total+=collection.getQuantity();
        oneRow.addAll(col);
        tableData.add(oneRow);
    }
    if(resultList.isEmpty()){
       farmer_model=new DefaultTableModel(new String[20][6],header);   
    }else{
        farmer_model=new DefaultTableModel(tableData, tableHeaders);
//        jLabel17.setText(String.valueOf(total));
    }
}
    
    public boolean dept_save(String code, String deptName, String taxId, String admin, String phone, String address){
      Session session = HibernateUtil.getSessionFactory().openSession();
      Transaction tx = null;
      String farmerID = null;
      boolean state=false;
      try{
         tx = session.beginTransaction();
         Query q = session.createQuery("FROM DtDepartment dept WHERE dept.deptName=:dept");
         q.setParameter("dept", deptName);
         List results=q.list();
         Iterator iterator=results.iterator();         
         if(!iterator.hasNext()){
            DtDepartment dept_save=new DtDepartment(code, deptName, taxId, admin, phone, address) ; 
            session.save(dept_save); 
            errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Transaction completed successfully</FONT></HTML>");
         }else{ 
             DtDepartment collec=(DtDepartment)iterator.next();
             collec.setCode(code);
             collec.setDeptName(deptName);
             collec.setTaxId(taxId);
             collec.setAdmin(admin);
             collec.getPhone();  
             collec.setAddress(address);
             session.update(collec);
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Farmer Record Updated successfully</FONT></HTML>");
         }
         tx.commit();
         state=true;         
         JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.INFORMATION_MESSAGE);
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.INFORMATION_MESSAGE);
      }finally {
         session.close(); 
      }
      return state;
   }
    
    public boolean save_account(int id,String deptId, String bankName, String account){
      Session session = HibernateUtil.getSessionFactory().openSession();
      Transaction tx = null;
      String farmerID = null;
      boolean state=false;
      try{
         tx = session.beginTransaction();
         Query q = session.createQuery("FROM DtBankAccounts dept WHERE dept.id=:id or dept.account=:account");
         q.setParameter("id", id);
         q.setParameter("account", account);
         List results=q.list();
         Iterator iterator=results.iterator();         
         if(!iterator.hasNext()){
            DtBankAccounts acc=new DtBankAccounts(deptId, bankName, account ) ; 
            session.save(acc); 
            errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Account saved successfully</FONT></HTML>");
         }else{ 
             DtBankAccounts acc=(DtBankAccounts)iterator.next();
             acc.setAccount(account);
             acc.setBankName(bankName);
             acc.setDeptId(deptId);
             session.update(acc);
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Account Updated successfully</FONT></HTML>");
         }
         tx.commit();
         state=true;         
         JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.INFORMATION_MESSAGE);
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.INFORMATION_MESSAGE);
      }finally {
         session.close(); 
      }
      return state;
   }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmb_dept;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_acc;
    private javax.swing.JTextField txtadd;
    private javax.swing.JTextField txtadmin;
    private javax.swing.JTextField txtcode;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtphone;
    // End of variables declaration//GEN-END:variables
}
