/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import farmTech.util.HibernateUtil;
import classes.ColumnResizer;
import classes.labelRenderer;
import classes.rowcount;
import classes.superCls;
import custom_jPanels.RoundRectGradientPanel;
import farm.entity.DtInsurances;
import java.awt.event.ItemEvent;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 *
 * @author Kent
 */
public class insurancePanel extends javax.swing.JPanel {

    private JLabel errorFields;
    superCls sup=new superCls();
    private int id=0;
    private Object[] icode,inid;
    private DtInsurances insurance;
    private DefaultTableModel insurance_model;
    /**
     * Creates new form insurancePanel
     */
    public insurancePanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scheme = new RoundRectGradientPanel();
        jLabel176 = new javax.swing.JLabel();
        jLabel177 = new javax.swing.JLabel();
        jScrollPane20 = new javax.swing.JScrollPane();
        jTableScheme = new javax.swing.JTable();
        lblrecno = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cmb_clientname = new javax.swing.JComboBox();
        chcksmart = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtaddress = new javax.swing.JTextField();
        txtphone = new javax.swing.JTextField();
        txtemail = new javax.swing.JTextField();
        txtfname = new javax.swing.JTextField();
        txtlname = new javax.swing.JTextField();
        txtscheme = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        cmbstatus = new javax.swing.JComboBox();
        jSeparator2 = new javax.swing.JSeparator();
        jProgressBar1 = new javax.swing.JProgressBar();
        jToolBar1 = new javax.swing.JToolBar();
        jButton68 = new javax.swing.JButton();
        jButton69 = new javax.swing.JButton();
        jButton70 = new javax.swing.JButton();
        jButton71 = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        scheme.setInheritsPopupMenu(true);
        scheme.setName("card13"); // NOI18N

        jLabel176.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel176.setLabelFor(cmb_clientname);
        jLabel176.setText("Bank Name :");

        jLabel177.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel177.setLabelFor(scheme);
        jLabel177.setText("Branch Name :");

        jTableScheme.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jTableScheme.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "#", "CLIENT NAME", "SCHEME NAME", "STATUS", "SMART STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableScheme.setGridColor(new java.awt.Color(204, 204, 204));
        jTableScheme.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableSchemeMouseClicked(evt);
            }
        });
        jScrollPane20.setViewportView(jTableScheme);

        lblrecno.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        lblrecno.setText("00000");

        jLabel1.setBackground(new java.awt.Color(102, 102, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Bank Details");
        jLabel1.setOpaque(true);

        cmb_clientname.setEditable(true);
        cmb_clientname.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        cmb_clientname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_clientnameItemStateChanged(evt);
            }
        });

        chcksmart.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        chcksmart.setText("Smart Status");
        chcksmart.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        chcksmart.setOpaque(false);

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel5.setText("Client Address :");

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel6.setLabelFor(txtphone);
        jLabel6.setText("Phone :");

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel7.setLabelFor(txtemail);
        jLabel7.setText("Client Email :");

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel8.setLabelFor(txtfname);
        jLabel8.setText("Client Contact Name :");

        txtaddress.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        txtaddress.setToolTipText("");

        txtphone.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        txtphone.setToolTipText("");

        txtemail.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        txtemail.setToolTipText("");

        txtfname.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        txtfname.setToolTipText("");

        txtlname.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        txtlname.setToolTipText("");

        txtscheme.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        txtscheme.setToolTipText("");

        jLabel9.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel9.setText("Status :");

        cmbstatus.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        cmbstatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Active", "Inactive" }));

        jProgressBar1.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jProgressBar1.setForeground(new java.awt.Color(51, 153, 0));
        jProgressBar1.setIndeterminate(true);
        jProgressBar1.setString("Updating table....");
        jProgressBar1.setStringPainted(true);

        jToolBar1.setBorder(null);
        jToolBar1.setRollover(true);

        jButton68.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jButton68.setText("Save & New");
        jButton68.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton68ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton68);

        jButton69.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jButton69.setText("Save & Close");
        jButton69.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton69ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton69);

        jButton70.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jButton70.setText("Clear");
        jButton70.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton70ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton70);

        jButton71.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jButton71.setText("Exit ");
        jButton71.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton71ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton71);

        javax.swing.GroupLayout schemeLayout = new javax.swing.GroupLayout(scheme);
        scheme.setLayout(schemeLayout);
        schemeLayout.setHorizontalGroup(
            schemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, schemeLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(schemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane20, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1)
                    .addGroup(schemeLayout.createSequentialGroup()
                        .addGroup(schemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(schemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel176, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addComponent(jLabel7)
                                .addComponent(jLabel177, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel9))
                        .addGap(5, 5, 5)
                        .addGroup(schemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(schemeLayout.createSequentialGroup()
                                .addGroup(schemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtscheme, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtaddress)
                                    .addComponent(txtemail)
                                    .addGroup(schemeLayout.createSequentialGroup()
                                        .addComponent(cmbstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(chcksmart)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addGap(5, 5, 5)
                                .addComponent(txtphone, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(schemeLayout.createSequentialGroup()
                                .addComponent(txtfname, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(txtlname, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(schemeLayout.createSequentialGroup()
                                .addComponent(cmb_clientname, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblrecno, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 326, Short.MAX_VALUE))
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, schemeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2)
                .addContainerGap())
            .addGroup(schemeLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(schemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5))
        );

        schemeLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtaddress, txtemail, txtscheme});

        schemeLayout.setVerticalGroup(
            schemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(schemeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(schemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel176)
                    .addComponent(cmb_clientname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblrecno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(schemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel177)
                    .addComponent(txtscheme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(schemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chcksmart)
                    .addComponent(jLabel9)
                    .addComponent(cmbstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(schemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtphone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(schemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(schemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtfname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtlname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jProgressBar1.setVisible(false);

        add(scheme, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    public void formload(){
        resetFields();
        initialize_table();
    }
    
    private void jTableSchemeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableSchemeMouseClicked
        // TODO add your handling code here:
        int row=jTableScheme.getSelectedRow();
        int col=jTableScheme.getSelectedColumn();
        DefaultTableModel model=(DefaultTableModel)jTableScheme.getModel();
        
        int id=Integer.parseInt(sup.getIntValue(model.getValueAt(row, 0)));
        Boolean status=Boolean.parseBoolean(sup.getValue(model.getValueAt(row, 4)));
        Boolean smart=Boolean.parseBoolean(sup.getValue(model.getValueAt(row, 5)));
        if(col==6){
            int option=JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this Branch?", "Bank branch Deletion confirmation", JOptionPane.OK_CANCEL_OPTION);
            if(option==JOptionPane.OK_OPTION)
                if(sup.deleteById(DtInsurances.class, id)){
                    initialize_table();
                }
        }
        if(col==3)
            if(this.update_Scheme(id, status, smart)){
                errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Status updated successfully</FONT></HTML>");
                JOptionPane.showMessageDialog(null,errorFields,"Clinic Management System",JOptionPane.INFORMATION_MESSAGE);
            }
        if(col==4)
            if(this.update_Scheme(id, status, smart)){
                errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Smart Card Status updated successfully</FONT></HTML>");
                JOptionPane.showMessageDialog(null,errorFields,"Clinic Management System",JOptionPane.INFORMATION_MESSAGE);
            }        
    }//GEN-LAST:event_jTableSchemeMouseClicked

    public void initialize_table(){
     jProgressBar1.setVisible(true);
        SwingWorker doComputeRate=new SwingWorker() {
          @Override
          protected Integer doInBackground() throws Exception{
              insurance_display();
          return 0;
        }
        @Override
        protected void done(){
            jTableScheme.setModel(insurance_model);  
            jProgressBar1.setVisible(false);
            SwingUtilities.invokeLater(new Runnable() {
               public void run() {  
                    jTableScheme.removeColumn(jTableScheme.getColumnModel().getColumn(0));
                    jTableScheme.getColumnModel().getColumn(5).setCellRenderer( new  labelRenderer());
                    jTableScheme.getColumnModel().getColumn(6).setCellRenderer( new  labelRenderer());
                    ColumnResizer.adjustColumnPreferredWidths (jTableScheme);
                    jTableScheme.revalidate();
            }});                    
        }
       };
    doComputeRate.execute();   
    }
    
    public boolean update_Scheme(int id,boolean status,boolean smart) {
     Session session = HibernateUtil.getSessionFactory().openSession();
     boolean state=false;
     Transaction tx=null;
    try {
        String hql;          
        tx=session.beginTransaction();
        DtInsurances scan=(DtInsurances)session.get(DtInsurances.class, id);
        if(scan!=null){ 
            scan.setStatus(status);
            scan.setSmartStatus(smart);
            scan.setDate(sup.sqlDate(new SimpleDateFormat("dd-MM-yyyy").format(new Date())));
            session.update(scan);
            tx.commit();
            state=true;
        }     
        
    } catch (HibernateException he) {
        errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+he.getMessage()+"'</FONT></HTML>");
        JOptionPane.showMessageDialog(null,errorFields,"Clinic Management System",JOptionPane.ERROR_MESSAGE); 
    }
    finally{
        session.close();
    }
    return state;
   }
    
    public boolean getStatus(String val){
        return val.equals("Active");
    }
    
    private void jButton68ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton68ActionPerformed
        // TODO add your handling code here:
        String clientName=sup.getValue(cmb_clientname.getSelectedItem());
        String insuranceCode=lblrecno.getText();
        String schemeName=txtscheme.getText();
        String phone=txtphone.getText();
        String address=txtaddress.getText();
        String contactFname=txtfname.getText();
        String contactLname=txtlname.getText();
        String email=txtemail.getText();
        boolean status=this.getStatus(cmbstatus.getSelectedItem().toString());
        boolean smartStatus=chcksmart.isSelected();
        Date date=sup.sqlDate(new SimpleDateFormat("dd-MM-yyyy").format(new Date()));
        
        if(!clientName.equals("") ){
           if(this.save_insurance(id, clientName, insuranceCode, schemeName, phone, address, contactFname, contactLname, email, status, smartStatus, date)){
               resetFields();
               id=0;
               initialize_table();
           }
        }
        else{
          errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Please make sure all fields are filled.</FONT></HTML>");
          JOptionPane.showMessageDialog(null,errorFields,"Clinic Management System",JOptionPane.INFORMATION_MESSAGE);
        }
        //    pmt.corporatesSearch();
        //    jTableScheme.setModel(pmt.getSchememodel());
    }//GEN-LAST:event_jButton68ActionPerformed

    private void jButton69ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton69ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton69ActionPerformed

    private void jButton70ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton70ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton70ActionPerformed

    private void jButton71ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton71ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton71ActionPerformed

    private void cmb_clientnameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_clientnameItemStateChanged
        // TODO add your handling code here:
        int idx=cmb_clientname.getSelectedIndex();
        if(idx!=0 && evt.getStateChange()==ItemEvent.SELECTED){
           String insurance_code=sup.getValue(icode[idx]);
           lblrecno.setText(insurance_code);
           id=Integer.parseInt(sup.getIntValue(inid[idx]));
//           this.getScheme(insurance_code);
        }
    }//GEN-LAST:event_cmb_clientnameItemStateChanged

    public boolean save_insurance(Integer id,String clientName, String insuranceCode, String insuranceName, String phone, String address, String contactFname, String contactLname, String email, boolean status, boolean smartStatus, Date date){
      Session session = HibernateUtil.getSessionFactory().openSession();      
      Transaction tx = null;
      boolean state=false;
      try{   
         tx=session.beginTransaction();
         DtInsurances insurance=new DtInsurances(id,clientName, insuranceCode, insuranceName, phone, address, contactFname, contactLname, email,status, smartStatus, date);
         Query q = session.getNamedQuery("DtInsurances.findBySchemeName_1");
           q.setParameter("schemeName", insuranceName);
           q.setParameter("clientName", clientName);
           q.setCacheable(true);
           List auth=q.list();
           Iterator itr=auth.iterator();
           if(!itr.hasNext()){
             session.save(insurance);
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Record Saved successfully</FONT></HTML>");
         }
         else{
            DtInsurances insuranc =(DtInsurances)itr.next();
            insuranc.setAddress(address);
            insuranc.setClientName(clientName);
            insuranc.setContactFname(contactFname);
            insuranc.setContactLname(contactLname);
            insuranc.setDate(date);
            insuranc.setEmail(email);
            insuranc.setInsuranceCode(insuranceCode);
            insuranc.setPhone(phone);
            insuranc.setSchemeName(insuranceName);
            insuranc.setStatus(status);
            insuranc.setSmartStatus(smartStatus);
            session.update(insuranc);
            errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Record updated successfully</FONT></HTML>");
         }
         tx.commit();
         JOptionPane.showMessageDialog(null,errorFields,"Clinic Management System",JOptionPane.INFORMATION_MESSAGE);
         state=true;
            
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
      }finally {
         session.close(); 
      }
      return state;
   }
    
    private void resetFields(){
        String val=String.valueOf(new rowcount().row_count(DtInsurances.class)+1);
        String pno="INO"+sup.getcode(4, val);
        cmb_clientname.setModel(clients());
        cmb_clientname.setSelectedIndex(-1);
        lblrecno.setText(pno);
        txtscheme.setText("");
        txtphone.setText("");
        txtaddress.setText("");
        txtfname.setText("");
        txtlname.setText("");
        txtemail.setText("");
        cmbstatus.setSelectedItem("");
        chcksmart.setSelected(false);
        Date date=sup.sqlDate(new SimpleDateFormat("dd-MM-yyyy").format(new Date()));
    }
    
    private void setFields(){
        resetFields();
        cmb_clientname.setSelectedItem(insurance.getClientName());
        lblrecno.setText(insurance.getInsuranceCode());
        txtscheme.setText(insurance.getSchemeName());
        txtphone.setText(insurance.getPhone());
        txtaddress.setText(insurance.getAddress());
        txtfname.setText(insurance.getContactFname());
        txtlname.setText(insurance.getContactLname());
        txtemail.setText(insurance.getEmail());
        cmbstatus.setSelectedItem(insurance.getStatus());
        chcksmart.setSelected(insurance.getSmartStatus());
        Date date=sup.sqlDate(new SimpleDateFormat("dd-MM-yyyy").format(new Date()));
    }
    
    
    private Double getScheme (String insurance_id) {       
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
       double value=0.00;
      try {        
           session.beginTransaction();
           Query q = session.getNamedQuery("DtInsurances.findByInsuranceCode");
           q.setParameter("insuranceCode", insurance_id);
           q.setCacheable(true);
           List auth=q.list();
           Iterator itr=auth.iterator();
           if(itr.hasNext()){  
               insurance=(DtInsurances)itr.next();
               setFields();
           }
           session.getTransaction().commit();
         }catch (HibernateException he) {
                 errorFields = new JLabel("<HTML><FONT COLOR = Blue>'"+he.getMessage()+"'</FONT></HTML>");
                 JOptionPane.showMessageDialog(null,errorFields,"CSRIM",JOptionPane.ERROR_MESSAGE);

         }finally {
             session.close(); 
         }
          return value;
    }
    
  private DefaultComboBoxModel clients() {                 
   int i=0;
   Query q;
   DefaultComboBoxModel tmodel =new DefaultComboBoxModel();
   org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
  try {        
       session.beginTransaction();
       q = session.createQuery("SELECT Distinct d.insuranceCode, d.clientName from DtInsurances d"); 
       q.setCacheable(true);
       List auth=q.list();
       icode=new Object[auth.size()+1];
       inid=new Object[auth.size()+1];
       tmodel.addElement("");
       icode[i]=0;
       for(Object o:auth){ 
           Object[] val=(Object[])o;
           tmodel.addElement(sup.getValue(val[1]));
           i++;     
           icode[i]=val[0];
               
       }
       session.getTransaction().commit();
     }catch (HibernateException he) {
             errorFields = new JLabel("<HTML><FONT COLOR = Blue>'"+he.getMessage()+"'</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"Clinic Management System",JOptionPane.ERROR_MESSAGE);

     }finally {
         session.close(); 
     }
      return tmodel;
    }
  
  private void insurance_display() {
    try {
        String hql;
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        hql="from DtInsurances b ORDER BY b.id DESC";
        
        Query q = session.createQuery(hql);
        q.setCacheable(true);
        q.setFirstResult(0);
        q.setMaxResults(100);   
        q.setCacheable(true);
        List resultList = q.list();
        displayScheme(resultList);        
        session.getTransaction().commit();
    } catch (HibernateException he) {
        errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+he.getMessage()+"'</FONT></HTML>");
        JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE); 
    }
   }
    
    private void displayScheme(List resultList) {
    Vector tableData = new Vector();
    int i=1;
    String header[]={"","Item","Client Name","Scheme","Status","Smart Status","",""};
    Vector<String> tableHeaders= new Vector<>();
    tableHeaders.addAll(Arrays.asList(header));
    for(Object o : resultList) {
        
        DtInsurances collection = (DtInsurances)o;
        Vector<Object> oneRow = new Vector<>();
        List col=Arrays.asList(
                               collection.getId(),
                               i++,
                               collection.getClientName(),
                               collection.getSchemeName(),
                               collection.getStatus(),
                               collection.getSmartStatus(),
                               "edit",
                               "delete"
                               );
                         
        oneRow.addAll(col);
        tableData.add(oneRow);
    }
    if(resultList.isEmpty()){
       insurance_model=new DefaultTableModel(new String[10][7],header);   
    }else
        insurance_model=new DefaultTableModel(tableData, tableHeaders){
            Class[] types = new Class [] {
                java.lang.Integer.class,
                java.lang.Integer.class,
                java.lang.String.class,
                java.lang.String.class, 
                java.lang.Boolean.class, 
                java.lang.Boolean.class,
                java.lang.String.class,
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        };
   }
            
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chcksmart;
    private javax.swing.JComboBox cmb_clientname;
    javax.swing.JComboBox cmbstatus;
    private javax.swing.JButton jButton68;
    private javax.swing.JButton jButton69;
    private javax.swing.JButton jButton70;
    private javax.swing.JButton jButton71;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel176;
    private javax.swing.JLabel jLabel177;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTableScheme;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblrecno;
    private javax.swing.JPanel scheme;
    private javax.swing.JTextField txtaddress;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtfname;
    private javax.swing.JTextField txtlname;
    private javax.swing.JTextField txtphone;
    private javax.swing.JTextField txtscheme;
    // End of variables declaration//GEN-END:variables
}
