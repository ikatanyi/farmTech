/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ui;

import ca.odell.glazedlists.GlazedLists;
import ca.odell.glazedlists.swing.AutoCompleteSupport;
import classes.ColumnResizer;
import classes.Farm;
import classes.clsDate;
import classes.labelRenderer;
import classes.superCls;
import custom_jPanels.RoundRectGradientPanel;
import custom_jPanels.SimpleGradientPanel;
import farm.entity.DtFarmerdetails;
import farm.entity.DtGuarantors;
import farm.entity.DtSecurities;
import farmTech.util.HibernateUtil;
import java.awt.Color;
import static java.lang.Math.random;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 *
 * @author Kent
 */
public class member_loanFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form member_loanFrame
     */
    Farm farmer=new Farm();
    clsDate dt=new clsDate();
    superCls sup=new superCls();
    private JLabel errorFields;
    DtFarmerdetails details;
    private String now_date,monthBegin;
    private String farmerid="";
    private double qty=0.00;
    private double rate=10.0;
    private double stores_credit=0.00;
    private double oust_loan=0.00;
    private double loan_limit=0.00;
    private double max_limit=500.00;
    private DefaultTableModel farmer_model,sec_model;
    private String userId;
    private JTable[] jTable;
    private AutoCompleteSupport type=null;
    private int x=0;
    public member_loanFrame() {        
        initComponents();
        this.jTable = new JTable[]{jTable1, jTable2};
    }

    public void getUserid(String userId){
        this.userId=userId;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new RoundRectGradientPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lbl_name = new javax.swing.JLabel();
        lbl_ol = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbl_loan = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtamt = new javax.swing.JTextField();
        lbl_cred = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new SimpleGradientPanel(new Color(120,78,46),new Color(255,255,255));
        jLabel13 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new SimpleGradientPanel();
        jLabel11 = new javax.swing.JLabel();
        cmbtype = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        txtserial = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtvalue = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtdesc = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jSeparator1 = new javax.swing.JSeparator();
        jButton7 = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setTitle("Member Loan/Advance Form");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ox-cow.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel1.setText("Search Name :");

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel2.setText("or Enter FId");

        jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jTextField2.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N

        jButton1.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel3.setText("Farmer Name :");

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel4.setText("OutStanding Loan :");

        lbl_name.setBackground(new java.awt.Color(255, 255, 255));
        lbl_name.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        lbl_name.setForeground(new java.awt.Color(51, 0, 255));
        lbl_name.setText("0.00");

        lbl_ol.setBackground(new java.awt.Color(255, 255, 255));
        lbl_ol.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        lbl_ol.setForeground(new java.awt.Color(51, 0, 255));
        lbl_ol.setText("0.00");

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel7.setText("Loan Limit :");

        lbl_loan.setBackground(new java.awt.Color(255, 255, 255));
        lbl_loan.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        lbl_loan.setForeground(new java.awt.Color(255, 0, 51));
        lbl_loan.setText("0.00");

        jLabel9.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel9.setText("Amt Awarded");

        jLabel10.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel10.setText("Stores Credit :");

        txtamt.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N

        lbl_cred.setBackground(new java.awt.Color(255, 255, 255));
        lbl_cred.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        lbl_cred.setForeground(new java.awt.Color(51, 0, 255));
        lbl_cred.setText("0.00");

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Guarantor Name:");

        jButton2.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "FarmerId", "Name", "OutStanding Loan", "State", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable1.setGridColor(new java.awt.Color(0, 153, 255));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 891, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Guarantors", jPanel2);

        jLabel11.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel11.setText("Security Type :");

        cmbtype.setEditable(true);
        cmbtype.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        cmbtype.setMaximumRowCount(20);

        jLabel14.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel14.setText("* Serial No");

        txtserial.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        txtserial.setToolTipText("");

        jLabel15.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel15.setText("* Est. Value:");

        txtvalue.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        txtvalue.setText("0.00");
        txtvalue.setToolTipText("");

        jButton3.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jButton3.setText("Accept");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable2.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Type", "Description", "Seria No.", "Value", "Date", "Attendant", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setGridColor(new java.awt.Color(51, 153, 255));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel5.setText("* Desc:");

        txtdesc.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N

        jButton8.setText("Retrieve From Hist");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbtype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtdesc, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtserial, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtvalue, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton8)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtvalue)
                            .addComponent(jButton3)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(txtserial))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(cmbtype))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtdesc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8)
                .addGap(15, 15, 15))
        );

        jTabbedPane1.addTab("Security", jPanel3);

        jButton4.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jButton4.setText("Award");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jButton5.setText("New");

        jButton6.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel.png"))); // NOI18N
        jButton6.setText("Exit");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel16.setText("Date :");

        jDateChooser1.setDate(new Date());
        jDateChooser1.setDateFormatString("dd-MM-yyyy");
        jDateChooser1.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jDateChooser1.setOpaque(false);

        jButton7.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jButton7.setText("Cancel");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addComponent(jTextField1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 771, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 916, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbl_name, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(lbl_ol, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_loan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_cred, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtamt)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE))
                        .addGap(38, 38, 38))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(lbl_name)
                        .addComponent(jLabel7)
                        .addComponent(lbl_loan)
                        .addComponent(jLabel16))
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(lbl_ol)
                        .addComponent(jLabel10)
                        .addComponent(lbl_cred))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtamt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel10, jLabel3, jLabel4, jLabel7, jLabel9, lbl_cred, lbl_loan, lbl_name, lbl_ol});

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void member_loan(){
        now_date=new SimpleDateFormat("dd-MM-yyyy").format(new Date());
        monthBegin = dt.seekMonth_Begin(new Date());
        qty=farmer.getFarmQty(farmerid, monthBegin, now_date);
        oust_loan=farmer.getOustLoan(farmerid);
        stores_credit=farmer.getStoresCredit(farmerid, "stores");
        loan_limit=(qty*rate)-oust_loan;
         SwingUtilities.invokeLater(new Runnable() {
                @Override
                public void run() {                   
                    for(int i=0;i<2;i++){
                        if(i==0){
                           Guarantors_display(0,farmerid);
                           jTable[i].setModel(farmer_model); 
                           jTable[i].getColumnModel().getColumn(6).setCellRenderer( new labelRenderer());
                           continue;
                        }
                        if(i==1){
                            securities_display(0,farmerid);
                            jTable[i].setModel(sec_model);
                            jTable[i].getColumnModel().getColumn(7).setCellRenderer( new labelRenderer());
                            continue;
                        }
                        
                        ColumnResizer.adjustColumnPreferredWidths(jTable[i]);
                        jTable[i].revalidate();
                        jTable[i].repaint(); 
                    }
                }
            });
    }
    private void fill_fields(){
        lbl_name.setText(details.getFname()+" "+details.getLname());
        farmerid=details.getFarmerId();
        lbl_ol.setText(String.valueOf(oust_loan));
        lbl_loan.setText(String.valueOf(loan_limit));
        lbl_cred.setText(String.valueOf(stores_credit));
                
    }
    
    private String getValid(double Oust_loan,double max_limit){
        String state="Invalid";
        try{
            if(Oust_loan<=max_limit)
                state="Valid";
        }
        catch(NumberFormatException ex){
           errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+ex.getMessage()+"'</FONT></HTML>");
        JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE); 
        }
        catch(Exception ex){
           errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+ex.getMessage()+"'</FONT></HTML>");
        JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE); 
        }
       return state; 
    }
    private void Guarantors_display(int val,String fid) {
    try {
        String hql;
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        switch(val){
            case 0:
                hql="from DtGuarantors g WHERE g.guanteeId=:farmerid";
                break;
            case 1:
                hql="from DtGuarantors g WHERE g.guanteeId=:farmerid";
                break;
            default:
                hql="from DtGuarantors g WHERE g.guanteeId=:farmerid";
                break;        
    }
        Query q = session.createQuery(hql);
        q.setParameter("farmerid", fid);
        List resultList = q.list();
        displayResult(resultList);
        session.getTransaction().commit();
    } catch (HibernateException he) {
        errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+he.getMessage()+"'</FONT></HTML>");
        JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE); 
    }
}
    
    private void displayResult(List resultList) {
    Vector tableData = new Vector();
    String header[]={"Id","GuarantorId","Name","Outs. Loan","Date","State",""};
    Vector<String> tableHeaders= new Vector<>();
    tableHeaders.addAll(Arrays.asList(header));
    for(Object o : resultList) {
        
        DtGuarantors collection = (DtGuarantors)o;
        Vector<Object> oneRow = new Vector<>();
        double ol=farmer.getOustLoan(collection.getGuarantorId());
        List col=Arrays.asList(collection.getId(),
                               collection.getGuarantorId(),
                               farmer.Farmer_name(collection.getGuarantorId()),
                               ol,
                               collection.getDate(),
                               getValid(ol,max_limit),
                               "remove");
                         
        oneRow.addAll(col);
        tableData.add(oneRow);
    }
    if(resultList.isEmpty()){
       farmer_model=new DefaultTableModel(new String[0][0],header);   
    }else
        farmer_model=new DefaultTableModel(tableData, tableHeaders);
   }
    
    private void securities_display(int val,String fid) {
    try {
        String hql;
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        switch(val){
            case 0:
                hql="from DtSecurities s WHERE s.farmerId=:farmerid";
                break;
            default:
                hql="from DtSecurities s WHERE s.farmerId=:farmerid";
                break;        
    }
        Query q = session.createQuery(hql);
        q.setParameter("farmerid", fid);
        List resultList = q.list();
        displaySecurity(resultList);
        session.getTransaction().commit();
    } catch (HibernateException he) {
        errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+he.getMessage()+"'</FONT></HTML>");
        JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE); 
    }
}
    
    private void displaySecurity(List resultList) {
    Vector tableData = new Vector();
    String header[]={"Id","Type","Desc","Serial No.","Value","Date","Attendant",""};
    Vector<String> tableHeaders= new Vector<>();
    tableHeaders.addAll(Arrays.asList(header));
    for(Object o : resultList) {
        
        DtSecurities collection = (DtSecurities)o;
        Vector<Object> oneRow = new Vector<>();
        List col=Arrays.asList(collection.getId(),
                               collection.getType(),
                               collection.getDescription(),
                               collection.getSerial(),
                               collection.getValue(),
                               collection.getDate(),
                               farmer.UserSearch(collection.getAttendantId()),
                               "remove");
                         
        oneRow.addAll(col);
        tableData.add(oneRow);
    }
    if(resultList.isEmpty()){
       sec_model=new DefaultTableModel(new String[0][0],header);   
    }else
        sec_model=new DefaultTableModel(tableData, tableHeaders);
   }
    
    private void save_Guarantor(String guanteeId, String guarantorId){
         org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
         Transaction tx = null;
         String date1=new SimpleDateFormat("dd-MM-yyyy").format( new Date());
         try{
            tx = session.beginTransaction();
            Query q = session.createQuery("FROM DtGuarantors g WHERE g.guanteeId=:g_id AND g.guarantorId=:gt_id");
            q.setParameter("g_id", guanteeId);
            q.setParameter("gt_id", guarantorId);
            List results=q.list();
            Iterator iterator=results.iterator();
            DtGuarantors guarantors=new DtGuarantors(guanteeId,guarantorId,userId,date1);       
            if(!iterator.hasNext())                 
                 session.save(guarantors);
            else
                 session.update(guarantors);
            tx.commit();
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
            errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
            JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE); 
      }finally {
         session.flush();
         session.close(); 
      }        
    }
    
    
private void save_security(String farmerId, String type, String description, String serial, double value, String date, String attendantId){
     org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
     Transaction tx = null;
     try{
        tx = session.beginTransaction();
        Query q = session.createQuery("FROM DtSecurities s WHERE s.farmerId=:id AND s.serial=:serial");
        q.setParameter("id", farmerId);
        q.setParameter("serial", serial);
        List results=q.list();
        Iterator iterator=results.iterator();
        DtSecurities security=new DtSecurities(farmerId, type, description, serial, value, date, attendantId);       
        if(!iterator.hasNext())                 
             session.save(security);
        else
             session.update(security);
        tx.commit();
  }catch (HibernateException e) {
     if (tx!=null) tx.rollback();
        errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
        JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE); 
  }finally {
     session.flush();
     session.close(); 
  }        
}
  
    
    private boolean del_User(int id){
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
       Transaction tx = null;
       boolean status=false;
      try{
         tx = session.beginTransaction();
         DtGuarantors guarantor = (DtGuarantors)session.get(DtGuarantors.class, id); 
         if(guarantor!=null)
            session.delete(guarantor);
         tx.commit();
         status=true;
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE); 
      }finally {
         session.close(); 
      }
     return status;
   }
    
    private boolean del_security(int id){
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
       Transaction tx = null;
       boolean status=false;
      try{
         tx = session.beginTransaction();
         DtSecurities secu = (DtSecurities)session.get(DtSecurities.class, id); 
         if(secu!=null)
            session.delete(secu);
         tx.commit();
         status=true;
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE); 
      }finally {
         session.close(); 
      }
     return status;
   }
    
    private boolean clear_records(){
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
       Transaction tx = null;
       boolean status=false;
       String date1=new SimpleDateFormat("dd-MM-yyyy").format( new Date());
       String hql="";
      try{
           tx = session.beginTransaction();
           for(int i=0;i<2;i++){
               if(i==0)
                  hql = "DELETE FROM DtGuarantors g WHERE g.guanteeId=:id AND g.date=:date";
               if(i==1)
                  hql= "DELETE FROM DtSecurities s WHERE s.farmerId=:id AND s.date=:date";
               Query q = session.createQuery(hql);
               q.setParameter("id", farmerid);
               q.setParameter("date", date1);
               int results=q.executeUpdate();
           }                        
         tx.commit();
         status=true;
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE); 
      }finally {
         session.close(); 
      }
     return status;
   }
    
  private DefaultComboBoxModel searchType() {                 
     int i=0;
     DefaultComboBoxModel tmodel =new DefaultComboBoxModel();
    org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
  try {        
       session.beginTransaction();
       Query q = session.createQuery("SELECT DISTINCT s.type FROM DtSecurities s");
       List auth=q.list();
       Iterator iterator=auth.iterator();
       while(iterator.hasNext() && i<auth.size()){  
               tmodel.addElement(auth.get(i));    
               i++;         
       }
       session.getTransaction().commit();
     }catch (HibernateException he) {
             errorFields = new JLabel("<HTML><FONT COLOR = Blue>'"+he.getStackTrace()+"'</FONT></HTML>");
            JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE);

     }finally {
         session.close(); 
     }
      return tmodel;
    }
  public boolean tx_complete(){
         org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
         Transaction tx = null;
         boolean state=false;
         String date1=new SimpleDateFormat("dd-MM-yyyy").format( new Date());
         try{
            tx = session.beginTransaction();
            Query q = session.createQuery("FROM DtFarmerAccount loan WHERE loan.farmerId=:id AND loan.type=:type AND loan.date=:date");
            q.setParameter("id", farmerid);
            q.setParameter("type", "Ln");
            q.setParameter("date", date1);
            List results=q.list();
            Iterator iterator=results.iterator();              
            if(iterator.hasNext())                              
               state=true;
            tx.commit(); 
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
            errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
            JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE); 
      }finally {
         session.flush();
         session.close(); 
      } 
         return state;
    }
  
    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
        panel_Search search=new panel_Search();
        search.formload();
        int option=JOptionPane.showInternalConfirmDialog(this.getParent(),search, "Farmer Search",JOptionPane.OK_CANCEL_OPTION,JOptionPane.PLAIN_MESSAGE);
        if(option==JOptionPane.OK_OPTION){
            farmerid=search.getPatientId();
            if(!farmerid.equals("")){
                details=farmer.FarmerSearch(farmerid);
                member_loan();
                fill_fields();
            }
            //            EnableFarmerFields(false);
        }
        jTextField2.setText("Type here");
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String farmerid=jTextField2.getText();
        if(farmerid!=null||!farmerid.equals("")){
               details=farmer.FarmerSearch(farmerid);
                member_loan();
                fill_fields(); 
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        panel_Search search=new panel_Search();
        search.formload();
        int option=JOptionPane.showInternalConfirmDialog(this.getParent(),search, "Farmer Search",JOptionPane.OK_CANCEL_OPTION,JOptionPane.PLAIN_MESSAGE);
        if(option==JOptionPane.OK_OPTION){
            String g_id=search.getPatientId();            
            if(!farmerid.equals("") && !g_id.equals("")){
//                this.save_Guarantor(farmerid, g_id);
                 double ol=farmer.getOustLoan(g_id);
                 String g_name=farmer.Farmer_name(g_id);
                 String valid=getValid(ol,max_limit);
                 String date=new SimpleDateFormat("dd-MM-yyyy").format(new Date());
                 int i=(int) random()*50+1;
                 
                 Object[] elements = new Object[] {i,g_id, g_name, ol, date, valid ,"remove"};
               
                 DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
                 model.addRow(elements);
                 jTable1.setModel(model);
                               
//                 SwingUtilities.invokeLater(new Runnable() {
//                 public void run() {
////                    Guarantors_display(0,farmerid);
////                    jTable1.setModel(farmer_model);
//                    jTable1.getColumnModel().getColumn(6).setCellRenderer( new labelRenderer());
//                    ColumnResizer.adjustColumnPreferredWidths(jTable1);
//                    jTable1.revalidate();
//                    jTable1.repaint();
//                 }
//                });
            }
            //            EnableFarmerFields(false);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int row=jTable1.getSelectedRow();
        int col=jTable1.getSelectedColumn();
        DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
        int idno=Integer.parseInt(sup.getIntValue(model.getValueAt(row, 0))); 
        if(idno!=0){
            switch(col){
                case 6:
                    del_User(idno);                            
                    model.removeRow(row);
                    break;
                default:
                    break;
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
        DefaultTableModel model2=(DefaultTableModel) jTable2.getModel();
        double credit=Double.parseDouble(sup.getCostValue(txtamt.getText()));
        String typ="Ln";
        String date=new SimpleDateFormat("dd-MM-yyyy").format(new Date());
        String description="loan";
        double debit=0.00;
        if(!farmerid.equals("")&& credit!=0.00){
            if(farmer.save_loan(farmerid, sup.sqlDate(date), typ, description, debit, credit,userId)){               
               List list= Arrays.asList(model);
               List list2= Arrays.asList(model2);
               if(!list.isEmpty()){
                   for(int i=0;i<model.getRowCount();i++){
                       String g_id=sup.getValue(model.getValueAt(i, 1));
                       if(!g_id.equals("")){                
                          this.save_Guarantor(farmerid, g_id); 
                        }
                    }
               }
               if(!list2.isEmpty()){
                   for(int i=0;i<model2.getRowCount();i++){
                       String type=sup.getValue(model2.getValueAt(i, 1));
                       String desc=sup.getValue(model2.getValueAt(i, 2));
                       String serial=sup.getValue(model2.getValueAt(i, 3));
                       double value=Double.parseDouble(sup.getCostValue(sup.getValue(model2.getValueAt(i, 4))));
                       if(!type.equals("") && !serial.equals("")&& value!=0.00){                
                          this.save_security(farmerid, type, desc, serial, value, date, userId); 
                        }
                    }
               }
               model.setRowCount(0);
               model2.setRowCount(0);
            }   
        }
        else{
          errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Please Select a Member</FONT></HTML>");
          JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.INFORMATION_MESSAGE);   
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        // TODO add your handling code here:
        int tab=jTabbedPane1.getSelectedIndex();
        switch(tab){
            case 0:
                break;
            case 1:
                 try{
                     if(type==null||!type.isInstalled()){
                        type=AutoCompleteSupport.install(cmbtype, GlazedLists.eventListOf(new superCls().getElements(searchType())));
                     }
                 }catch(Exception ex){
                     errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+ex.getMessage()+"'</FONT></HTML>");
                     JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE);                  
                 }
                break;
            default:
                break;
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String type=sup.getValue(cmbtype.getSelectedItem());
        String desc=txtdesc.getText();
        String serial=txtserial.getText();
        double value=Double.parseDouble(sup.getCostValue(txtvalue.getText()));
        String date=new SimpleDateFormat("dd-MM-yyyy").format(new Date());
        String username=farmer.UserSearch(userId);
        int x=(int) random()*50+1;
        if(!type.equals("") && !serial.equals("")&& value!=0.00){
             Object[] elements = new Object[] {x, type, desc, serial, value, date,username ,"remove"};

             DefaultTableModel model=(DefaultTableModel) jTable2.getModel();
             model.addRow(elements);
             jTable2.setModel(model);

//             SwingUtilities.invokeLater(new Runnable() {
//             public void run() {
//    //                    Guarantors_display(0,farmerid);
//    //                    jTable1.setModel(farmer_model);
//                jTable2.getColumnModel().getColumn(7).setCellRenderer( new labelRenderer());
//                ColumnResizer.adjustColumnPreferredWidths(jTable2);
//                jTable2.revalidate();
//                jTable2.repaint();
//             }
//            });
        }
        else{
            errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Please make sure key fields are filled!</FONT></HTML>");
            JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE); 
        }
//        if(!type.equals("") && !serial.equals("")&& value!=0.00){
//           this.save_security(farmerid, type, desc, serial, value, date, userId);
//           SwingUtilities.invokeLater(new Runnable() {
//                public void run() {
//                    securities_display(0,farmerid);
//                    jTable2.setModel(sec_model);
//                    jTable2.getColumnModel().getColumn(6).setCellRenderer( new labelRenderer());
//                    ColumnResizer.adjustColumnPreferredWidths(jTable2);
//                    jTable2.revalidate();
//                    jTable2.repaint();
//                }
//            });
//        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
//        if(!tx_complete()){
//            int choice= JOptionPane.showConfirmDialog(this,"Transaction not completed! Exit? ","DMS",JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE );
//            if(choice==JOptionPane.OK_OPTION){
//                this.clear_records();
//                this.setVisible(false);
//            }
//        }else
            this.setVisible(false);
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        int row=jTable2.getSelectedRow();
        int col=jTable2.getSelectedColumn();
        DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
        int idno=Integer.parseInt(sup.getIntValue(model.getValueAt(row, 0))); 
        if(idno!=0){
            switch(col){
                case 6:
                    del_security(idno);
                    model.removeRow(row);
                    break;
                default:
                    break;
            }
        }
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        SwingUtilities.invokeLater(new Runnable() {
                public void run() {
                    securities_display(0,farmerid);
                    jTable2.setModel(sec_model);
                    jTable2.getColumnModel().getColumn(7).setCellRenderer( new labelRenderer());
                    ColumnResizer.adjustColumnPreferredWidths(jTable2);
                    jTable2.revalidate();
                    jTable2.repaint();
                }
            });
    }//GEN-LAST:event_jButton8ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbtype;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel lbl_cred;
    private javax.swing.JLabel lbl_loan;
    private javax.swing.JLabel lbl_name;
    private javax.swing.JLabel lbl_ol;
    private javax.swing.JTextField txtamt;
    private javax.swing.JTextField txtdesc;
    private javax.swing.JTextField txtserial;
    private javax.swing.JTextField txtvalue;
    // End of variables declaration//GEN-END:variables
}
