/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ui;

import classes.ColumnResizer;
import classes.clsDate;
import classes.clsReport;
import classes.labelRenderer;
import classes.superCls;
import custom_jPanels.RoundRectGradientPanel;
import custom_jPanels.SimpleGradientPanel;
import farmTech.util.HibernateUtil;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.SQLQuery;
import org.hibernate.Session;

/**
 *
 * @author Kent
 */
public class paymentRpt extends javax.swing.JInternalFrame {

    superCls sup=new superCls();
    clsReport rpt;
    clsDate dt=new clsDate();
    private DefaultTableModel farmer_model;
    private JLabel errorFields ;
    private String farmerid,user,service=null,bank=null,ptype=null;
    private int dt1=0,dt2=0;
    private HashMap jasperParameter;
    /**
     * Creates new form paymentRpt
     */
    public paymentRpt() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new RoundRectGradientPanel();
        jPanel2 = new SimpleGradientPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jComboBox1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jMonthChooser1 = new com.toedter.calendar.JMonthChooser();
        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtcheque = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setTitle("Organizational payment");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ox-cow.png"))); // NOI18N

        jCheckBox1.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jCheckBox1.setSelected(true);
        jCheckBox1.setText("All");
        jCheckBox1.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jCheckBox1.setOpaque(false);
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel2.setText("Payment Type:");

        jComboBox2.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel4.setText("Bank :");

        jComboBox3.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox3ItemStateChanged(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel5.setText("Provider :");

        jComboBox4.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox4ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel2)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCheckBox1))
                .addContainerGap())
        );

        jComboBox1.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow_right.gif"))); // NOI18N
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow_left.gif"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable1.setGridColor(new java.awt.Color(204, 204, 204));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel3.setText("Month:");

        jMonthChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jMonthChooser1PropertyChange(evt);
            }
        });

        jYearChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jYearChooser1PropertyChange(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jButton3.setText("Print");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel1.setText("Cheque No.");

        txtcheque.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 752, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jMonthChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jYearChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtcheque, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jYearChooser1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jMonthChooser1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(txtcheque, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        if(jCheckBox1.isSelected()){
           payroll_display(0,"", dt1, dt2,ptype,"bank","service",0);
           jComboBox3.setSelectedIndex(-1);
           jComboBox4.setSelectedIndex(-1);
           jComboBox2.setSelectedIndex(-1);
        }
        else{
//            errorFields = new JLabel("<HTML><FONT COLOR = BLUE>please select a farmer</FONT></HTML>");
//            JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        int value=Integer.parseInt(new superCls().getIntValue(jComboBox1.getSelectedItem())),upperlimit=30;
        if(value>0)
           upperlimit=(value)*upperlimit;
        else
          upperlimit=0;
        if(ptype!=null)
           payroll_display(1,"", dt1, dt2,ptype,"bank","service",upperlimit);
        if(bank!=null)
           payroll_display(2,"", dt1, dt2,ptype,bank,"service",upperlimit); 
        if(service!=null)
            payroll_display(3,"", dt1, dt2,ptype,bank,service,upperlimit); 
        else
           payroll_display(0,farmerid, dt1, dt2,"","","",upperlimit);
        jTable1.setModel(farmer_model);
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                jTable1.getColumnModel().getColumn(10).setCellRenderer( new  labelRenderer());
                ColumnResizer.adjustColumnPreferredWidths (jTable1);
                jTable1.revalidate();
            }});

    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int value=Integer.parseInt(new superCls().getIntValue(jComboBox1.getSelectedIndex()));
        int max=jComboBox1.getItemCount();
        int upperlimit=30;
        if(value!=max){
            value++;
            jComboBox1.setSelectedItem(value);
        }else{
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int value=Integer.parseInt(new superCls().getIntValue(jComboBox1.getSelectedIndex()));
        int max=jComboBox1.getItemCount();
        int upperlimit=30;
        if(value!=0){
            value--;
            jComboBox1.setSelectedItem(value);
        }else{
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int col=jTable1.getSelectedColumn();
        int row=jTable1.getSelectedRow();
        String id=sup.getValue((jTable1.getValueAt(row, 0)));
        String date=sup.getValue((jTable1.getValueAt(row, 2)));
        int month=jMonthChooser1.getMonth()+1;
        int year=jYearChooser1.getYear();
        jasperParameter=new HashMap();
        
        jasperParameter.put("farmerid",id);
        jasperParameter.put("month",month);
        jasperParameter.put("year",year);
        if(col==8 && id!=null){
            rpt=new clsReport(date,dt1,dt2);
            rpt.report(id, "rpt_farmer_payment.jasper");
        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void jMonthChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jMonthChooser1PropertyChange
        // TODO add your handling code here:
        dt1=jMonthChooser1.getMonth()+1;
        //         dt2=jYearChooser1.getYear();
        if(ptype!=null)
           payroll_display(1,"", dt1, dt2,ptype,"bank","service",0);
        if(bank!=null)
           payroll_display(2,"", dt1, dt2,ptype,bank,"service",0); 
        if(service!=null)
            payroll_display(2,"", dt1, dt2,ptype,bank,service,0); 
        else
           payroll_display(1,farmerid, dt1, dt2,"","","",0);
        
        jTable1.setModel(farmer_model);
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                jTable1.getColumnModel().getColumn(10).setCellRenderer( new  labelRenderer());
                ColumnResizer.adjustColumnPreferredWidths (jTable1);
                jTable1.revalidate();
            }});
            //         jComboBox1.setModel(new superCls().pagination("VFarmerPayroll"));

            //         String date=new SimpleDateFormat("dd-MM-yyyy").format(jCalendar1.getDate());
            //         String date2=new SimpleDateFormat("dd-MM-yyyy").format(jCalendar2.getDate());
            //         dt1=jMonthChooser1.getMonth()+1;
            //         dt2=jYearChooser1.getYear();
    }//GEN-LAST:event_jMonthChooser1PropertyChange

    private void jYearChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jYearChooser1PropertyChange
        // TODO add your handling code here:
        //        dt1=jMonthChooser1.getMonth()+1;
        dt2=jYearChooser1.getYear();
        if(ptype!=null)
           payroll_display(1,"", dt1, dt2,ptype,"bank","service",0);
        if(bank!=null)
           payroll_display(2,"", dt1, dt2,ptype,bank,"service",0); 
        if(service!=null)
            payroll_display(2,"", dt1, dt2,ptype,bank,service,0); 
        else
           payroll_display(1,farmerid, dt1, dt2,"","","",0);
        jTable1.setModel(farmer_model);
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                jTable1.getColumnModel().getColumn(10).setCellRenderer( new  labelRenderer());
                ColumnResizer.adjustColumnPreferredWidths (jTable1);
                jTable1.revalidate();
            }});
    }//GEN-LAST:event_jYearChooser1PropertyChange

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        // TODO add your handling code here:
        ptype=sup.getValue(jComboBox2.getSelectedItem());
        if(!ptype.equals("")){
            payroll_display(1,"", dt1, dt2,ptype,"bank","service",0);
            jTable1.setModel(farmer_model);
             SwingUtilities.invokeLater(new Runnable() {
                @Override
                public void run() {
                    jTable1.getColumnModel().getColumn(10).setCellRenderer( new  labelRenderer());
                    ColumnResizer.adjustColumnPreferredWidths (jTable1);
                    jTable1.revalidate();
                }});
             jComboBox3.setSelectedIndex(-1);
             jComboBox4.setSelectedIndex(-1);
             jCheckBox1.setSelected(false);
            bank=null;
            service=null;
        }
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jComboBox3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox3ItemStateChanged
        // TODO add your handling code here:
        bank=sup.getValue(jComboBox3.getSelectedItem());
        if(!bank.equals("")){
            payroll_display(2,"", dt1, dt2,ptype,bank,"service",0);
            jTable1.setModel(farmer_model);
             SwingUtilities.invokeLater(new Runnable() {
                @Override
                public void run() {
                    jTable1.getColumnModel().getColumn(10).setCellRenderer( new  labelRenderer());
                    ColumnResizer.adjustColumnPreferredWidths (jTable1);
                    jTable1.revalidate();
                }});
//             jComboBox2.setSelectedIndex(-1);
             jComboBox4.setSelectedIndex(-1);
             jCheckBox1.setSelected(false);
            ptype=null;
            service=null;
        }
    }//GEN-LAST:event_jComboBox3ItemStateChanged

    private void jComboBox4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox4ItemStateChanged
        // TODO add your handling code here:
        service=sup.getValue(jComboBox4.getSelectedItem());
        if(!service.equals("")){
            payroll_display(3,"", dt1, dt2,ptype,bank,service,0);
            jTable1.setModel(farmer_model);
             SwingUtilities.invokeLater(new Runnable() {
                @Override
                public void run() {
                    jTable1.getColumnModel().getColumn(10).setCellRenderer( new  labelRenderer());
                    ColumnResizer.adjustColumnPreferredWidths (jTable1);
                    jTable1.revalidate();
                }});
//             jComboBox2.setSelectedIndex(-1);
             jComboBox3.setSelectedIndex(-1);
             jCheckBox1.setSelected(false);
            ptype=null;
            bank=null;
        }
    }//GEN-LAST:event_jComboBox4ItemStateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int month=jMonthChooser1.getMonth()+1;
        int year=jYearChooser1.getYear();
        String cheque=txtcheque.getText();
        jasperParameter=new HashMap();
        if(bank!=null && !bank.equals("")){
            jasperParameter.put("bank",bank);
            jasperParameter.put("month",month);
            jasperParameter.put("year",year);
            jasperParameter.put("cheque",cheque);
            rpt=new clsReport();
            rpt.report_viewer("rpt_org_payment.jasper",jasperParameter);
        }
        if(service!=null && !service.equals("")){
             jasperParameter.put("bank",service);
             jasperParameter.put("month",month);
             jasperParameter.put("year",year);
             jasperParameter.put("cheque",cheque);
             rpt=new clsReport();
             rpt.report_viewer("rpt_mobile_payment.jasper",jasperParameter);
        }
           
         
            
    }//GEN-LAST:event_jButton3ActionPerformed
public void formload(){
//        user=userid;
//        txtpatientid.setText(String.valueOf(new rowcount().row_count(DtFarmerdetails.class)+1));
        jComboBox2.setModel(payment_type());
        jComboBox3.setModel(bank());
//        jComboBox2.setModel(branch());
        jComboBox4.setModel(provider());
//        jComboBox4.setModel(centers());
        jComboBox2.setSelectedIndex(-1);
        jComboBox3.setSelectedIndex(-1);
        jComboBox4.setSelectedIndex(-1);
        payroll_display(0,"", 0, 0,"type","bank","service",0);
        jTable1.setModel(farmer_model);
         SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                jTable1.getColumnModel().getColumn(10).setCellRenderer( new  labelRenderer());
                ColumnResizer.adjustColumnPreferredWidths (jTable1);
                jTable1.revalidate();
            }});
         jComboBox1.setModel(new superCls().pagination("VFarmerPayroll"));
         
//         String date=new SimpleDateFormat("dd-MM-yyyy").format(jCalendar1.getDate());
//         String date2=new SimpleDateFormat("dd-MM-yyyy").format(jCalendar2.getDate());
         dt1=jMonthChooser1.getMonth()+1;
         dt2=jYearChooser1.getYear();
    }
   private void payroll_display(int val,String farmerid,int month, int year,String ptype,String bank,String service,int upperlimit) {
    try {
        String hql;
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        switch(val){
            case 0:
                hql="select f.farmerId,f.payment_type,f.bank_name,f.account_no,f.branch,f.service_provider,f.mobile_no,p.date, p.rate,p.quantity"
                        + " from dt_farmerdetails f LEFT JOIN v_farmer_payroll p ON f.farmerId=p.farmerId  where Month(p.date)=:month and Year(p.date)=:year order by p.id asc";
                break;
            case 1:
                hql="select f.farmerId,f.payment_type,f.bank_name,f.account_no,f.branch,f.service_provider,f.mobile_no,p.date, p.rate,p.quantity"
                        + " from dt_farmerdetails f LEFT JOIN v_farmer_payroll p ON f.farmerId=p.farmerId  where Month(p.date)=:month and Year(p.date)=:year and f.payment_type=:ptype order by p.id asc";
                break;
            case 2:
                hql="select f.farmerId,f.payment_type,f.bank_name,f.account_no,f.branch,f.service_provider,f.mobile_no,p.date, p.rate,p.quantity"
                        + " from dt_farmerdetails f LEFT JOIN v_farmer_payroll p ON f.farmerId=p.farmerId  where Month(p.date)=:month and Year(p.date)=:year and f.bank_name=:bank order by p.id asc";
                break;
            case 3:
                hql="select f.farmerId,f.payment_type,f.bank_name,f.account_no,f.branch,f.service_provider,f.mobile_no,p.date, p.rate,p.quantity"
                        + " from dt_farmerdetails f JOIN v_farmer_payroll p ON f.farmerId=p.farmerId  where Month(p.date)=:month and Year(p.date)=:year and f.service_provider=:service order by p.id asc";
                break;
            default:
                hql="select f.farmerId,f.payment_type,f.bank_name,f.account_no,f.branch,f.service_provider,f.mobile_no,p.date, p.rate,p.quantity"
                        + " from dt_farmerdetails f LEFT  JOIN v_farmer_payroll p ON f.farmerId=p.farmerId  where Month(p.date)=:month and Year(p.date)=:year order by p.id asc";
                break;
    }
        SQLQuery q = session.createSQLQuery(hql);
//        q.addScalar("f.farmerId", Hibernate.STRING);
//        q.addScalar("f.payment_type", Hibernate.STRING);
//        q.addScalar("f.bank_name", Hibernate.STRING);
//        q.addScalar("f.account_no", Hibernate.STRING);
//        q.addScalar("f.branch", Hibernate.STRING);
//        q.addScalar("f.service_provider", Hibernate.STRING);
//        q.addScalar("f.mobile_no", Hibernate.STRING);
//        q.addScalar("p.date", Hibernate.DATE);
//        q.addScalar("p.net_total", Hibernate.DOUBLE);
        if(val==1)
            q.setParameter("ptype", ptype);
        if(val==2)
            q.setParameter("bank", bank);
        if(val==3)
            q.setParameter("service", service);
         q.setParameter("month", dt1);
         q.setParameter("year", dt2); 
         q.setFirstResult(upperlimit);
         q.setMaxResults(30);
         List<Object[]>  resultList = q.list();
         displayAssets(resultList);        
         session.getTransaction().commit();
    } catch (HibernateException he) {
        errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+he.getMessage()+"'</FONT></HTML>");
        JOptionPane.showMessageDialog(null,errorFields,"DMS_fpayment",JOptionPane.ERROR_MESSAGE); 
    }
   }
   
   private void displayAssets(List<Object[]>  resultList) {
    Vector tableData = new Vector();
    String header[]={"farmerId","Name","Date","P_Type","Bank","Branch","account","Service_Provider","Mobile_No","Net",""};
    Vector<String> tableHeaders= new Vector<>();
    tableHeaders.addAll(Arrays.asList(header));
    for(Object[] record : resultList) {
        
        Vector<Object> oneRow = new Vector<>();
        List col=Arrays.asList(
                               record[0],//.getFarmerId(),
                               sup.Farmer_name(record[0].toString()),
                               record[7],
                               record[1],
                               record[2],
                               record[4],
                               record[3],
                               record[5],
                               record[6],
                               Double.parseDouble(sup.getCostValue(record[8])) * Double.parseDouble(sup.getCostValue(record[9]))+(this.getCredit(record[0].toString(), dt1, dt2)),
                               "view Details"
                               );
                         
        oneRow.addAll(col);
        tableData.add(oneRow);
    }
    if(resultList.isEmpty()){
       farmer_model=new DefaultTableModel(new String[10][20],header);   
    }else
        farmer_model=new DefaultTableModel(tableData, tableHeaders);
   }
   
   private Double getCredit(String farmerid,int month,int year){
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
       Double credit=0.0;
      try {        
           session.beginTransaction();
           SQLQuery q = session.createSQLQuery("SELECT SUM(e.balance) from v_farmer_expenses e WHERE e.description='Milk' AND e.farmerId=:farmerId AND Month(e.date)=:month AND Year(e.date)=:year");
           q.setParameter("farmerId", farmerid);
           q.setParameter("month", month);
           q.setParameter("year", year);
           List<Object[]> auth=q.list();
           Iterator iterator=auth.iterator();
           if(iterator.hasNext()){  
               credit=(Double)iterator.next();    
           }
           session.getTransaction().commit();
         }catch (HibernateException he) {
                 errorFields = new JLabel("<HTML><FONT COLOR = Blue>'"+he.getMessage()+"'</FONT></HTML>");
                 JOptionPane.showMessageDialog(null,errorFields,"farmTech",JOptionPane.ERROR_MESSAGE);

         }finally {
             session.close(); 
         }
          return credit==null? 0.0:credit;
   }
   
   private DefaultComboBoxModel payment_type () {                 
       int i=0;
       DefaultComboBoxModel tmodel =new DefaultComboBoxModel();
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
      try {        
           session.beginTransaction();
           Query q = session.createQuery("SELECT distinct farmer.paymentType from DtFarmerdetails farmer where farmer.paymentType <>''");
           List auth=q.list();
           Iterator iterator=auth.iterator();
           while(iterator.hasNext()){  
               String ptype=(String)iterator.next();
               tmodel.addElement(ptype);    
               i++;         
           }
           session.getTransaction().commit();
         }catch (HibernateException he) {
                 errorFields = new JLabel("<HTML><FONT COLOR = Blue>'"+he.getMessage()+"'</FONT></HTML>");
                 JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE);

         }finally {
             session.close(); 
         }
          return tmodel;
    }
   
   private DefaultComboBoxModel bank () {                 
       int i=0;
       DefaultComboBoxModel tmodel =new DefaultComboBoxModel();
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
      try {        
           session.beginTransaction();
           Query q = session.createQuery("SELECT distinct farmer.bankName from DtFarmerdetails farmer where farmer.bankName <>\''");
           List auth=q.list();
           Iterator iterator=auth.iterator();
           while(iterator.hasNext()){  
               String bankname=(String)iterator.next();
               tmodel.addElement(bankname);    
               i++;         
           }
           session.getTransaction().commit();
         }catch (HibernateException he) {
                 errorFields = new JLabel("<HTML><FONT COLOR = Blue>'"+he.getMessage()+"'</FONT></HTML>");
                 JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE);

         }finally {
             session.close(); 
         }
          return tmodel;
    }
    
    private DefaultComboBoxModel branch () {                 
       int i=0;
       DefaultComboBoxModel tmodel =new DefaultComboBoxModel();
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
      try {        
           session.beginTransaction();
           Query q = session.createQuery("SELECT distinct farmer.branch from DtFarmerdetails farmer where farmer.branch <>\''");
           List auth=q.list();
           Iterator iterator=auth.iterator();
           while(iterator.hasNext()){  
               String branch=(String)iterator.next();
               tmodel.addElement(branch);    
               i++;          
           }
           session.getTransaction().commit();
         }catch (HibernateException he) {
                 errorFields = new JLabel("<HTML><FONT COLOR = Blue>'"+he.getMessage()+"'</FONT></HTML>");
                 JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE);

         }finally {
             session.close(); 
         }
          return tmodel;
    }
    
    private DefaultComboBoxModel provider () {                 
       int i=0;
       DefaultComboBoxModel tmodel =new DefaultComboBoxModel();
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
      try {        
           session.beginTransaction();
           Query q = session.createQuery("SELECT distinct farmer.serviceProvider from DtFarmerdetails farmer where farmer.serviceProvider <>''");
           List auth=q.list();
           Iterator iterator=auth.iterator();
           while(iterator.hasNext()){ 
               String provider=(String)iterator.next();
               tmodel.addElement(provider);    
               i++;         
           }
           session.getTransaction().commit();
         }catch (HibernateException he) {
                 errorFields = new JLabel("<HTML><FONT COLOR = Blue>'"+he.getMessage()+"'</FONT></HTML>");
                 JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE);

         }finally {
             session.close(); 
         }
          return tmodel;
    }
    
    public void formload(String userid){
        
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private com.toedter.calendar.JMonthChooser jMonthChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private com.toedter.calendar.JYearChooser jYearChooser1;
    private javax.swing.JTextField txtcheque;
    // End of variables declaration//GEN-END:variables
}
