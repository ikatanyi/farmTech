/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ui;

import classes.ColumnResizer;
import classes.TextAreaRenderer;
import classes.labelRenderer;
import classes.superCls;
import custom_jPanels.GradientRoundRectButton;
import custom_jPanels.RoundRectGradientPanel;
import farm.entity.DtCodes;
import farmTech.util.HibernateUtil;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 *
 * @author Kent
 */
public class exp_code_frame extends javax.swing.JInternalFrame {

    /**
     * Creates new form exp_code_frame
     */
    superCls sup=new superCls();
    private DefaultTableModel farmer_model=null;
    private JLabel errorFields;
    private int id=0;
    private String index="Expense";
    public exp_code_frame() {
        initComponents();
    }

    public void formload(){
          this.code_display(0, "", 0);
          jTable1.setModel(farmer_model);
          SwingUtilities.invokeLater(new Runnable() {
          public void run() {
            jTable1.getColumnModel().getColumn(2).setCellRenderer( new  TextAreaRenderer());    
            jTable1.getColumnModel().getColumn(4).setCellRenderer( new  labelRenderer());
            jTable1.getColumnModel().getColumn(5).setCellRenderer( new  labelRenderer());
            ColumnResizer.adjustColumnPreferredWidths (jTable1);
            jTable1.revalidate();
         }});
          jComboBox2.setModel(new superCls().pagination("DtCodes"));
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new RoundRectGradientPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtdesc = new javax.swing.JTextField();
        txtcode = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton3 = new GradientRoundRectButton();
        jComboBox2 = new javax.swing.JComboBox();
        jButton4 = new GradientRoundRectButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setTitle("Expense - Income code");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ox-cow.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel1.setText("Description :");

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel2.setText("Code :");

        txtdesc.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        txtdesc.setToolTipText("");

        txtcode.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        txtcode.setToolTipText("");

        jTable1.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "id", "Type", "Description", "code", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(204, 204, 204));
        jTable1.setRowHeight(17);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel4.setText("Type:");

        jComboBox1.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Expense", "Income" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow_left.gif"))); // NOI18N
        jButton3.setText("previous");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox2.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow_right.gif"))); // NOI18N
        jButton4.setText("Next");
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(5, 5, 5)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtdesc, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtcode, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(0, 73, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel4)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtdesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)
                    .addComponent(jButton3))
                .addGap(20, 20, 20))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String codes=txtcode.getText();
        String desc=txtdesc.getText();
        String type=jComboBox1.getSelectedItem().toString();
        if(!desc.equals("") && !codes.equals("")){
            this.save_code(id, type, desc, codes);
            this.code_display(1, type, 0);
            jTable1.setModel(farmer_model);
          SwingUtilities.invokeLater(new Runnable() {
          public void run() {
            jTable1.getColumnModel().getColumn(2).setCellRenderer( new  TextAreaRenderer());    
            jTable1.getColumnModel().getColumn(4).setCellRenderer( new  labelRenderer());
            jTable1.getColumnModel().getColumn(5).setCellRenderer( new  labelRenderer());
            ColumnResizer.adjustColumnPreferredWidths (jTable1);
            jTable1.revalidate();
         }});
        }
        id=0;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        int idx=jComboBox1.getSelectedIndex();
        String type=jComboBox1.getSelectedItem().toString();
        if(idx!=-1){
            if(idx==1)
                index="Income";
        }
        this.code_display(1, type, 0);
            jTable1.setModel(farmer_model);
          SwingUtilities.invokeLater(new Runnable() {
          public void run() {
            jTable1.getColumnModel().getColumn(2).setCellRenderer( new  TextAreaRenderer());    
            jTable1.getColumnModel().getColumn(4).setCellRenderer( new  labelRenderer());
            jTable1.getColumnModel().getColumn(5).setCellRenderer( new  labelRenderer());
            ColumnResizer.adjustColumnPreferredWidths (jTable1);
            jTable1.revalidate();
         }});
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
         int col=jTable1.getSelectedColumn();
//        String date=new SimpleDateFormat("dd-MM-yyyy").format(jDateChooser1.getDate());
        int row=jTable1.getSelectedRow();
        id=Integer.parseInt(sup.getIntValue(jTable1.getValueAt(row, 0)));
        String type=sup.getValue(jTable1.getValueAt(row, 1));
        String desc=sup.getValue(jTable1.getValueAt(row, 2));
        String code=sup.getValue(jTable1.getValueAt(row, 3));
        
        if(col==4){
            txtcode.setText(code);
            txtdesc.setText(desc);
            jComboBox1.setSelectedItem(type);
        }
        if(col==5){
            int  result = JOptionPane.showInternalConfirmDialog(this,"Are you sure you want Delete This Record!","Dairy Management System",JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE );
            if(result==JOptionPane.OK_OPTION){
               delete(id);
               DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
               model.removeRow(row);
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int value=Integer.parseInt(new superCls().getIntValue(jComboBox1.getSelectedIndex()));
        int max=jComboBox1.getItemCount();
        int upperlimit=30;
        if(value!=0){
            value--;
            jComboBox1.setSelectedItem(value);
        }else{
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        // TODO add your handling code here:
//        String fid=lbl_Fid.getText();
        int value=Integer.parseInt(new superCls().getIntValue(jComboBox2.getSelectedItem())),upperlimit=30;
        String type=jComboBox1.getSelectedItem().toString();
        if(value>0)
          upperlimit=(value)*upperlimit;
        else
          upperlimit=0;

         this.code_display(1, type, upperlimit);
          jTable1.setModel(farmer_model);
          SwingUtilities.invokeLater(new Runnable() {
          public void run() {
            jTable1.getColumnModel().getColumn(2).setCellRenderer( new  TextAreaRenderer());    
            jTable1.getColumnModel().getColumn(4).setCellRenderer( new  labelRenderer());
            jTable1.getColumnModel().getColumn(5).setCellRenderer( new  labelRenderer());
            ColumnResizer.adjustColumnPreferredWidths (jTable1);
            jTable1.revalidate();
         }});
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int value=Integer.parseInt(new superCls().getIntValue(jComboBox1.getSelectedIndex()));
        int max=jComboBox1.getItemCount();
        int upperlimit=30;
        if(value!=max){
            value++;
            jComboBox1.setSelectedItem(value);
        }else{
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    public void delete(int id){
       Session session = HibernateUtil.getSessionFactory().openSession();
       Transaction tx = null;
       String farmername="";
      try{
         tx = session.beginTransaction();
         DtCodes expense = (DtCodes)session.get(DtCodes.class, id);
         session.delete(expense);
         
         tx.commit();
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
         errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
         JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE);  
      }finally {
         session.close(); 
      }
   }
    
    public boolean save_code(int id, String type, String description, String code){
      Session session = HibernateUtil.getSessionFactory().openSession();
      Transaction tx = null;
      boolean state=false;
      try{
         tx = session.beginTransaction();
         Query q = session.createQuery("from DtCodes cod where cod.code=:code or cod.id=:id");
         q.setParameter("code", code);
         q.setParameter("id", id);
           List auth=q.list();
           Iterator iterator=auth.iterator();
           if(!iterator.hasNext()){ 
             DtCodes collec_save=new DtCodes(type,description,code) ; 
             session.save(collec_save); 
            errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Transaction completed successfully</FONT></HTML>");
         }else{  
             DtCodes collec=(DtCodes)iterator.next();
             collec.setCode(code);
             collec.setDescription(description);
             collec.setType(type);
             session.update(collec);
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Farmer Record Updated successfully</FONT></HTML>");
         }
         tx.commit();
         state=true;         
         JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.INFORMATION_MESSAGE);
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.INFORMATION_MESSAGE);
      }finally {
         session.close(); 
      }
      return state;
   }
    
    public void code_display(int val,String type,int upperlimit) {
    try {
        String hql;
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        switch(val){
            case 0:
                hql="from DtCodes order by id asc";
                break;  
                        
            case 1:
                hql="from DtCodes c WHERE c.type=:type order by c.id desc";
                break;
            default:
                hql="from DtCodes order by id asc";
                break;        
    }
        Query q = session.createQuery(hql); 
        if(val==1)
            q.setParameter("type", type);
        q.setFirstResult(upperlimit);
        q.setMaxResults(30);
        List resultList = q.list();
        displayResult(resultList);
        session.getTransaction().commit();
    } catch (HibernateException he) {
        he.printStackTrace();
    }
}
    
    private void displayResult(List resultList) {
    Vector tableData = new Vector();
    String header[]={"id","Type","Description","Code","",""};
    Vector<String> tableHeaders= new Vector<>();
    tableHeaders.addAll(Arrays.asList(header));
    for(Object o : resultList) {
        
        DtCodes collection = (DtCodes)o;
        Vector<Object> oneRow = new Vector<>();
        List col=Arrays.asList(collection.getId(),
                               collection.getType(),
                               collection.getDescription(),
                               collection.getCode(),
                               "edit",
                               "delete");
        oneRow.addAll(col);
        tableData.add(oneRow);
    }
    if(resultList.isEmpty()){
       farmer_model=new DefaultTableModel(new String[20][5],header);   
    }else{
        farmer_model=new DefaultTableModel(tableData, tableHeaders);
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtcode;
    private javax.swing.JTextField txtdesc;
    // End of variables declaration//GEN-END:variables
}
