/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import classes.ColumnResizer;
import classes.clsDate;
import classes.labelRenderer;
import classes.superCls;
import custom_jPanels.RoundRectGradientPanel;
import farm.entity.DtDailycollection;
import farm.entity.DtMstock;
import farm.entity.DtPurchasesAccount;
import farmTech.util.HibernateUtil;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 *
 * @author Kent
 */
public class collection_Record extends javax.swing.JInternalFrame {

    private double total=0.00;
    private DefaultTableModel farmer_model;
    superCls sup=new superCls();
    Date month_begin=null;
    private JLabel errorFields;
    clsDate dt=new clsDate();
    jframe_collection coll=new jframe_collection();
    /**
     * Creates new form collection_Record
     */
    public collection_Record() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new RoundRectGradientPanel();
        jLabel1 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setResizable(true);
        setTitle("Milk Collection Statement");

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel1.setText("From :");

        jDateChooser1.setDate(new Date());
        jDateChooser1.setDateFormatString("dd-MM-yyyy");
        jDateChooser1.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel2.setText("To :");

        jDateChooser2.setDate(new Date());
        jDateChooser2.setDateFormatString("dd-MM-yyyy");
        jDateChooser2.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N

        jTable1.setForeground(new java.awt.Color(153, 153, 153));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setGridColor(new java.awt.Color(204, 204, 204));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 255));
        jLabel3.setText("Quantity :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("0.00");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 275, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addComponent(jSeparator1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4)))
                .addGap(17, 17, 17)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int col=jTable1.getSelectedColumn();
        int row=jTable1.getSelectedRow();
        String date=new SimpleDateFormat("dd-MM-yyyy").format(jDateChooser1.getDate());    
        String date1=sup.getValue(jTable1.getValueAt(row, 3));         
        String farmerid=sup.getValue(jTable1.getValueAt(row, 1)); 
        double qty=Double.parseDouble(sup.getCostValue(jTable1.getValueAt(row, 5)));
        int id=Integer.parseInt(sup.getIntValue(jTable1.getValueAt(row, 0)));    
        if(col==8){  
            int  result = JOptionPane.showConfirmDialog(this,"Are you sure you want Delete This Record!","Dairy Management System",JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE );
            if(result==JOptionPane.OK_OPTION){
                int stock_id=Integer.parseInt(sup.getIntValue(coll.getStock_details(id)[0]));
                int pid=Integer.parseInt(sup.getIntValue(coll.getStock_details(id)[1]));
                if(collection_delete(id,stock_id,pid)){
                    collec_display(1,farmerid,month_begin,sup.sqlDate(date),0);
                    jTable1.setModel(farmer_model);
                    SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        jTable1.getColumnModel().getColumn(7).setCellRenderer( new  labelRenderer());
                        jTable1.getColumnModel().getColumn(8).setCellRenderer( new  labelRenderer());
                        ColumnResizer.adjustColumnPreferredWidths (jTable1);
                        jTable1.revalidate();
                  }});
                }   
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private boolean collection_delete(int id,int stockid,int pid){
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
       Transaction tx = null;
       boolean status=false;
      try{
         tx = session.beginTransaction();
         DtDailycollection collec = (DtDailycollection)session.get(DtDailycollection.class, id);   
         DtMstock stock = (DtMstock)session.get(DtMstock.class, stockid); 
         DtPurchasesAccount p_account = (DtPurchasesAccount)session.get(DtPurchasesAccount.class, pid); 
         
         if(collec!=null)
             session.delete(collec); 
         if(stock!=null)
            session.delete(p_account);
         if(p_account!=null)
            session.delete(stock);  
         tx.commit();
         status=true;
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE); 
      }finally {
         session.close(); 
      }
     return status;
   }
    
    
    public void collec_display(int val,String fid,Date date1,Date date2,int upperlimit) {
    try {
        String hql;
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        switch(val){
            case 0:
                hql="from DtDailycollection c WHERE c.date between :date1 and :date2 order by c.id ASC";
                break;  
                        
            case 1:
                hql="from DtDailycollection c WHERE c.farmerId=:id AND c.date between :date1 and :date2 order by c.id ASC";
                break;
            default:
                hql="from DtDailycollection c WHERE c.date between :date1 and :date2 order by c.id ASC";
                break;        
    }
        Query q = session.createQuery(hql);
        q.setDate("date1", date1);
        q.setDate("date2", date2);        
        if(val==1)
            q.setParameter("id", fid);
        q.setFirstResult(upperlimit);
        q.setMaxResults(30);
        List resultList = q.list();
        displayResult(resultList);
        session.getTransaction().commit();
    } catch (HibernateException he) {
        he.printStackTrace();
    }
}
    
    private void displayResult(List resultList) {
    Vector tableData = new Vector();
    total=0.0;
    String header[]={"Record","id","Name","Date","Session","Quantity","Attendant","",""};
    Vector<String> tableHeaders= new Vector<>();
    tableHeaders.addAll(Arrays.asList(header));
    for(Object o : resultList) {
        
        DtDailycollection collection = (DtDailycollection)o;
        Vector<Object> oneRow = new Vector<>();
        List col=Arrays.asList(collection.getId(),
                               collection.getFarmerId(),
                               sup.Farmer_name(collection.getFarmerId()),
                               collection.getDate(),
                               collection.getSession(),
                               collection.getQuantity(),
                               collection.getAttendant(),
                               "edit",
                               "delete");
        total+=collection.getQuantity();
        oneRow.addAll(col);
        tableData.add(oneRow);
    }
    if(resultList.isEmpty()){
       farmer_model=new DefaultTableModel(new String[20][9],header);   
    }else{
        farmer_model=new DefaultTableModel(tableData, tableHeaders);
        jLabel4.setText(sup.doubleFormatter(total));
    }
}
    
    public void formload(){
       String date=new SimpleDateFormat("dd-MM-yyyy").format( new Date());
//       String date1=date.substring(3,date.length());
       month_begin=sup.sqlDate(dt.seekMonth_Begin(jDateChooser1.getDate()));
       collec_display(0,"",month_begin,sup.sqlDate(date),0);
       jTable1.setModel(farmer_model);
       SwingUtilities.invokeLater(new Runnable() {
                    public void run() {
                    jTable1.getColumnModel().getColumn(7).setCellRenderer( new  labelRenderer());
                    jTable1.getColumnModel().getColumn(8).setCellRenderer( new  labelRenderer());
                    ColumnResizer.adjustColumnPreferredWidths (jTable1);
                    jTable1.revalidate();
                 }});
   } 
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
