/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ui;

import ca.odell.glazedlists.GlazedLists;
import ca.odell.glazedlists.swing.AutoCompleteSupport;
import classes.ColumnResizer;
import classes.clsDate;
import classes.cls_farmer;
import classes.labelRenderer;
import classes.superCls;
import custom_jPanels.BeveledGradientPanel;
import custom_jPanels.CurvedGradientPanel;
import custom_jPanels.GradientRoundRectButton;
import farm.entity.DtCRate;
import farm.entity.DtCoffeCollection;
import farm.entity.DtFarmerdetails;
import farm.entity.DtPurchasesAccount;
import farmTech.util.HibernateUtil;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 *
 * @author Kent
 */
public class coffee_inputFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form coffee_inputFrame
     */
    private DefaultTableModel farmer_model;
    cls_farmer farmer=new cls_farmer();
    private AutoCompleteSupport type=null;
    private JLabel errorFields;
    private int[] code;
    DtCRate ctype;
    superCls sup=new superCls();
    clsDate dt=new clsDate();
    private String coffee_type="",userid="";
    Date month_begin=null;
    private int reccode=0,id=0;
    private double rate=0.0,total=0.0;
    public coffee_inputFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new CurvedGradientPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtquantity = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jButton2 = new GradientRoundRectButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = //new UserInputsPanel("Farmer Information");
        new BeveledGradientPanel();
        jPanel2.repaint();
        jLabel15 = new javax.swing.JLabel();
        lbl_Fid = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lbl_age = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lbl_Fname = new javax.swing.JLabel();
        lbl_sex = new javax.swing.JLabel();
        lbl_Fphone = new javax.swing.JLabel();
        lbl_Faddress = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton3 = new GradientRoundRectButton();
        jComboBox1 = new javax.swing.JComboBox();
        jButton4 = new GradientRoundRectButton();
        jLabel7 = new javax.swing.JLabel();
        cmbtype = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setTitle("Coffee Input Panel");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ox-cow.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel1.setText("Search Farmer: ");

        jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jTextField1.setText("Type farmer name here");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel2.setText("M.no");

        jTextField2.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jTextField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField2FocusGained(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel12.setText("Quantity (kgs)");

        txtquantity.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        txtquantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtquantityFocusGained(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel14.setText("Date :");

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel15.setText("Age:");

        lbl_Fid.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel6.setText("Address :");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel3.setText("M.no :");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel4.setText("Farmer Name :");

        lbl_age.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel16.setText("Gender :");

        lbl_Fname.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        lbl_sex.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        lbl_Fphone.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        lbl_Faddress.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel5.setText("Phone No.");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel15)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_age, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_Fid, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_Fname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_sex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_Fphone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_Faddress, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_sex, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbl_Fphone, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbl_Fname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel15)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_age, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl_Faddress, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(lbl_Fid, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(86, 86, 86))
        );

        jDateChooser1.setDate(new Date());
        jDateChooser1.setDateFormatString("dd-MM-yyyy");
        jDateChooser1.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser1PropertyChange(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("0.00");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setText("Total:");

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("All");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow_left.gif"))); // NOI18N
        jButton3.setText("previous");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow_right.gif"))); // NOI18N
        jButton4.setText("Next");
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel7.setText("Type of Coffee :");

        cmbtype.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbtype.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbtypeItemStateChanged(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel8.setText("Harvest :");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1st", "2nd", "3rd", "4th" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(4, 4, 4)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(jButton1)))
                                .addGap(88, 88, 88)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbtype, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel18)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(13, 13, 13)
                                .addComponent(txtquantity, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(242, 242, 242)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(cmbtype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel12))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel8)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtquantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4)
                            .addComponent(jButton3)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        // TODO add your handling code here:
        jTextField1.selectAll();
    }//GEN-LAST:event_jTextField1FocusGained

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
        resetFields();
        month_begin=sup.sqlDate(dt.seekMonth_Begin(jDateChooser1.getDate()));
        String date=new SimpleDateFormat("dd-MM-yyyy").format( jDateChooser1.getDate());
        String date1=date.substring(3,date.length());
        panel_Search search=new panel_Search();
        search.formload();
        int option=JOptionPane.showConfirmDialog(null,search, "Farmer Search",JOptionPane.OK_CANCEL_OPTION);
        if(option==JOptionPane.OK_OPTION){
            String farmerid=search.mno;
            if(farmerid!=null && !farmerid.equals("")){
                id=0;
                jCheckBox1.setSelected(false);
                fillFields(farmer.FarmerID_Search(farmerid));
                collec_display(1,farmerid,month_begin,sup.sqlDate(date),0);
                jTable1.setModel(farmer_model);
                SwingUtilities.invokeLater(new Runnable() {
                    public void run() {
                        jTable1.getColumnModel().getColumn(7).setCellRenderer( new  labelRenderer());
                        jTable1.getColumnModel().getColumn(8).setCellRenderer( new  labelRenderer());
                        ColumnResizer.adjustColumnPreferredWidths (jTable1);
                        jTable1.revalidate();
                    }});
                    jLabel17.setText(String.valueOf(total));
                }
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Record not Found!</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE);
            }
            jTextField2.setText("Type here");

    }//GEN-LAST:event_jTextField1KeyReleased

    private void jTextField2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField2FocusGained
        // TODO add your handling code here:
        jTextField2.selectAll();
    }//GEN-LAST:event_jTextField2FocusGained

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        resetFields();
        jCheckBox1.setSelected(false);
        String farmerid=jTextField2.getText();
        String date=new SimpleDateFormat("dd-MM-yyyy").format( new Date());
        String date1=date.substring(3,date.length());
        if(!farmerid.equals("")){
            id=0;
            fillFields(farmer.mno_Search(farmerid));
            collec_display(1,farmerid,month_begin,sup.sqlDate(date),0);
            jTable1.setModel(farmer_model);
            SwingUtilities.invokeLater(new Runnable() {
                public void run() {
                    jTable1.getColumnModel().getColumn(7).setCellRenderer( new  labelRenderer());
                    jTable1.getColumnModel().getColumn(8).setCellRenderer( new  labelRenderer());
                    ColumnResizer.adjustColumnPreferredWidths (jTable1);
                    jTable1.revalidate();
                }});
                jLabel17.setText(String.valueOf(total));
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtquantityFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtquantityFocusGained
        // TODO add your handling code here:
        txtquantity.selectAll();
    }//GEN-LAST:event_txtquantityFocusGained

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String farmerid=lbl_Fid.getText();
        month_begin=sup.sqlDate(dt.seekMonth_Begin(jDateChooser1.getDate()));
        String date1=new SimpleDateFormat("dd-MM-yyyy").format( new Date());
        if(!farmerid.equals("")){
            String date=new SimpleDateFormat("dd-MM-yyyy").format(jDateChooser1.getDate());
            String farmerId=farmerid;
            month_begin=sup.sqlDate(dt.seekMonth_Begin(jDateChooser1.getDate()));
            double quantity=Double.parseDouble(new superCls().getCostValue(txtquantity.getText()));
            double debit=quantity*rate,credit=0.0;
            String dept_id="002";
            String type=new superCls().getValue(cmbtype.getSelectedItem());
            String harvest=new superCls().getValue(jComboBox3.getSelectedItem());
            String attendant=userid;
//            int idno=Integer.parseInt(new superCls().getIntValue(farmerid));
            if(!farmerid.equals("")&& quantity!=0.0){
                if(this.coffee_Collection(id, date, farmerId, quantity, type,harvest,attendant, rate, debit, dept_id)){
                    if(this.purchase_account(date, farmerId, quantity, type, debit,credit, dept_id)){
                        collec_display(1,farmerid,month_begin,sup.sqlDate(date),0);
                        jTable1.setModel(farmer_model);
                        SwingUtilities.invokeLater(new Runnable() {
                            public void run() {
                                jTable1.getColumnModel().getColumn(7).setCellRenderer( new  labelRenderer());
                                jTable1.getColumnModel().getColumn(8).setCellRenderer( new  labelRenderer());
                                ColumnResizer.adjustColumnPreferredWidths (jTable1);
                                jTable1.revalidate();
                            }});
                        }else{
                          this.collection_delete(id,farmerId,type,date);
                    }                         
                id=0;
                jLabel17.setText(String.valueOf(total));
                }
              }
            }
    }//GEN-LAST:event_jButton2ActionPerformed

    private boolean collection_delete(int id,String farmerid,String type,String date){
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
       Transaction tx = null;
       boolean status=false;
      try{
         tx = session.beginTransaction();
         Query q = session.createQuery("FROM DtCoffeCollection collec WHERE collec.id=:id or collec.farmerId=:fid and collec.type=:type and collec.date=:date");
         q.setParameter("id", id);
         q.setParameter("fid", farmerid);
         q.setParameter("type", type);
         q.setParameter("date", sup.sqlDate(date));
         List results=q.list();
         Iterator iterator=results.iterator();         
         if(iterator.hasNext()){
             DtCoffeCollection invent=(DtCoffeCollection)iterator.next();
             session.delete(invent);             
         }
         tx.commit();
         this.purchase_delete(farmerid, type, date);
         status=true;
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE); 
      }finally {
         session.close(); 
      }
     return status;
   }
    
    private boolean purchase_delete(String farmerid,String type,String date){
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
       Transaction tx = null;
       boolean status=false;
      try{
         tx = session.beginTransaction();
         Query q = session.createQuery("FROM DtPurchasesAccount account WHERE account.purchaseId=:fid and account.description=:type and account.date=:date");
         q.setParameter("fid", farmerid);
         q.setParameter("type", type);
         q.setParameter("date", sup.sqlDate(date));
         List results=q.list();
         Iterator iterator=results.iterator();         
         if(iterator.hasNext()){
             DtPurchasesAccount invent=(DtPurchasesAccount)iterator.next();
             session.delete(invent);             
         }
         tx.commit();
         status=true;
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE); 
      }finally {
         session.close(); 
      }
     return status;
   }
    
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int col=jTable1.getSelectedColumn();
//        String date=new SimpleDateFormat("dd-MM-yyyy").format(jDateChooser1.getDate());
        int row=jTable1.getSelectedRow();
        String farmerid=sup.getValue(jTable1.getValueAt(row, 1));
        String type=sup.getValue(jTable1.getValueAt(row, 4));
        String date=sup.getValue(jTable1.getValueAt(row, 3));
        id=Integer.parseInt(sup.getIntValue(jTable1.getValueAt(row, 0)));
        if(col==7){
            jCheckBox1.setSelected(false);
            txtquantity.setText(sup.getIntValue(jTable1.getValueAt(row, 5)));
//            cmbSession.setSelectedItem(sup.getValue(jTable1.getValueAt(row, 4)));
            jDateChooser1.setDate(sup.StringToJDate(sup.getValue(date)));
            fillFields(farmer.FarmerID_Search(farmerid));
        }
        if(col==8){
            int  result = JOptionPane.showInternalConfirmDialog(this,"Are you sure you want Delete This Record!","Dairy Management System",JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE );
            if(result==JOptionPane.OK_OPTION){
                if(this.collection_delete(id,farmerid,type,date)){
                collec_display(1,farmerid,month_begin,sup.sqlDate(date),0);
                jTable1.setModel(farmer_model);
                SwingUtilities.invokeLater(new Runnable() {
                    public void run() {
                        jTable1.getColumnModel().getColumn(7).setCellRenderer( new  labelRenderer());
                        jTable1.getColumnModel().getColumn(8).setCellRenderer( new  labelRenderer());
                        ColumnResizer.adjustColumnPreferredWidths (jTable1);
                        jTable1.revalidate();
                    }});
                }
            }
                jLabel17.setText(String.valueOf(total));
            }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser1PropertyChange
        // TODO add your handling code here:
        if(evt.getSource()==jDateChooser1){
            int col=jTable1.getSelectedColumn();
            String date=new SimpleDateFormat("dd-MM-yyyy").format(jDateChooser1.getDate());
            month_begin=sup.sqlDate(dt.seekMonth_Begin(jDateChooser1.getDate()));
            String farmerid=lbl_Fid.getText();
            if(farmerid!=null && !farmerid.equals("") && col!=7)
               collec_display(1,farmerid,month_begin,sup.sqlDate(date),0);
            else
              collec_display(0,"",month_begin,sup.sqlDate(date),0);

            jTable1.setModel(farmer_model);
            SwingUtilities.invokeLater(new Runnable() {
                public void run() {
                    jTable1.getColumnModel().getColumn(7).setCellRenderer( new  labelRenderer());
                    jTable1.getColumnModel().getColumn(8).setCellRenderer( new  labelRenderer());
                    ColumnResizer.adjustColumnPreferredWidths (jTable1);
                    jTable1.revalidate();
                }});
            }
    }//GEN-LAST:event_jDateChooser1PropertyChange

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        if(jCheckBox1.isSelected()){
            id=0;
            resetFields();
            String date=new SimpleDateFormat("dd-MM-yyyy").format(jDateChooser1.getDate());
            month_begin=sup.sqlDate(dt.seekMonth_Begin(jDateChooser1.getDate()));
            collec_display(0,"",month_begin,sup.sqlDate(date),0);
            jTable1.setModel(farmer_model);
            SwingUtilities.invokeLater(new Runnable() {
                public void run() {
                    jTable1.getColumnModel().getColumn(7).setCellRenderer( new  labelRenderer());
                    jTable1.getColumnModel().getColumn(8).setCellRenderer( new  labelRenderer());
                    ColumnResizer.adjustColumnPreferredWidths (jTable1);
                    jTable1.revalidate();
                }});

                lbl_Fid.setText("N/A");
                lbl_Fname.setText("All");
            }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int value=Integer.parseInt(new superCls().getIntValue(jComboBox1.getSelectedIndex()));
        int max=jComboBox1.getItemCount();
        int upperlimit=30;
        if(value!=0){
            value--;
            jComboBox1.setSelectedItem(value);
        }else{
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        String fid=lbl_Fid.getText();
        int value=Integer.parseInt(new superCls().getIntValue(jComboBox1.getSelectedItem())),upperlimit=30;
        if(value>0)
           upperlimit=(value)*upperlimit;
        else
          upperlimit=0;

        String date=new SimpleDateFormat("dd-MM-yyyy").format(jDateChooser1.getDate());
        month_begin=sup.sqlDate(dt.seekMonth_Begin(jDateChooser1.getDate()));
        if(fid==null||fid.equals("N/A")||fid.equals(""))
          collec_display(0,"",month_begin,sup.sqlDate(date),upperlimit);
        else
           collec_display(1,fid,month_begin,sup.sqlDate(date),upperlimit);
        jTable1.setModel(farmer_model);
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                jTable1.getColumnModel().getColumn(7).setCellRenderer( new  labelRenderer());
                ColumnResizer.adjustColumnPreferredWidths (jTable1);
                jTable1.revalidate();
            }});
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int value=Integer.parseInt(new superCls().getIntValue(jComboBox1.getSelectedIndex()));
        int max=jComboBox1.getItemCount();
        int upperlimit=30;
        if(value!=max){
            value++;
            jComboBox1.setSelectedItem(value);
        }else{
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void cmbtypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbtypeItemStateChanged
        // TODO add your handling code here:
        int index=cmbtype.getSelectedIndex();
        if(index!=-1){
            int c_id=code[index];
            this.CtypeSearch(c_id);
            rate=ctype.getCRate();
            coffee_type=ctype.getType();
        }
        
    }//GEN-LAST:event_cmbtypeItemStateChanged

    public void formload(String userid){
        this.userid=userid;
       resetFields();       
       try{
         if(type==null||!type.isInstalled())
            type=AutoCompleteSupport.install(cmbtype, GlazedLists.eventListOf(sup.getElements(ctypes())));                        
         }catch(Exception ex){
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+ex.getMessage()+"'</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE);                  
         }
       
       jComboBox1.setModel(new superCls().pagination("DtCoffeCollection"));
       String date=new SimpleDateFormat("dd-MM-yyyy").format( new Date());
//       String date1=date.substring(3,date.length());
       month_begin=sup.sqlDate(dt.seekMonth_Begin(jDateChooser1.getDate()));
       collec_display(0,"",month_begin,sup.sqlDate(date),0);
       jTable1.setModel(farmer_model);
       SwingUtilities.invokeLater(new Runnable() {
            public void run() {
            jTable1.getColumnModel().getColumn(7).setCellRenderer( new  labelRenderer());
            jTable1.getColumnModel().getColumn(8).setCellRenderer( new  labelRenderer());
            ColumnResizer.adjustColumnPreferredWidths (jTable1);
            jTable1.revalidate();
         }});
       jLabel17.setText(String.valueOf(total));
   } 
    
    private DefaultComboBoxModel ctypes () {                 
       int i=0;
       DefaultComboBoxModel tmodel =new DefaultComboBoxModel();
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
      try {        
           session.beginTransaction();
           Query q = session.createQuery("from DtCRate");
           List auth=q.list();
           Iterator iterator=auth.iterator();
           code=new int[auth.size()];
           while(iterator.hasNext()){ 
                 ctype=(DtCRate)iterator.next();
                 tmodel.addElement(ctype.getType()); 
                 code[i]=ctype.getId();
                 i++;         
           }
           session.getTransaction().commit();
         }catch (HibernateException he) {
                 errorFields = new JLabel("<HTML><FONT COLOR = Blue>'"+he.getMessage()+"'</FONT></HTML>");
                 JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE);

         }finally {
             session.close(); 
         }
          return tmodel;
    }
    
    public void CtypeSearch(int id ){
       Session session = HibernateUtil.getSessionFactory().openSession();
       Transaction tx = null;
      try{
         tx = session.beginTransaction();
          ctype= (DtCRate)session.get(DtCRate.class, id);
          tx.commit();
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
               errorFields = new JLabel("<HTML><FONT COLOR = Blue>'"+e.getMessage()+"'</FONT></HTML>");
               JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE);
      }finally {
         session.close(); 
      }
   }
    
    public boolean coffee_Collection(Integer id, String date, String farmerId, double quantity, String type, String harvest,String attendant, double rate,double debit,String dept_id){
      Session session = HibernateUtil.getSessionFactory().openSession();
      Transaction tx = null;
      String farmerID = null;
      boolean state=false;
      try{
         tx = session.beginTransaction();
         DtCoffeCollection collec = (DtCoffeCollection)session.get(DtCoffeCollection.class, id);
         if(collec==null){
            DtCoffeCollection collec_save=new DtCoffeCollection(sup.sqlDate(date), farmerId, quantity, type, harvest,attendant,rate) ; 
            session.save(collec_save); 
            errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Transaction completed successfully</FONT></HTML>");
         }else{  
             collec.setDate(sup.sqlDate(date));
             collec.setFarmerId(farmerId);
             collec.setQuantity(quantity);
             collec.setRate(rate);
             collec.setHarvest(harvest);
             collec.setType(type);
             collec.setAttendant(attendant);  
             session.update(collec);
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Farmer Record Updated successfully</FONT></HTML>");
         }
         tx.commit();
         state=true;         
         JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.INFORMATION_MESSAGE);
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.INFORMATION_MESSAGE);
      }finally {
         session.close(); 
      }
      return state;
   }
    
    
    public boolean purchase_account(String date, String farmerId, double quantity, String type,double debit,double credit,String dept_id){
      Session session = HibernateUtil.getSessionFactory().openSession();
      Transaction tx = null;
      String farmerID = null;
      boolean state=false;
      try{
         tx = session.beginTransaction();
         Query q = session.createQuery("from DtPurchasesAccount p where p.description=:type and p.purchaseId=:id and p.date=:date");
         q.setParameter("type", type);
         q.setParameter("id", farmerId);
         q.setParameter("date", sup.sqlDate(date));
         List auth=q.list();
         Iterator iterator=auth.iterator();
         if(!iterator.hasNext()){
//            DtPurchasesAccount p_account=new DtPurchasesAccount(sup.sqlDate(date), dept_id, type, debit, 0.0, quantity,farmerId);
//            session.save(p_account); 
            errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Transaction completed successfully</FONT></HTML>");
         }else{  
             DtPurchasesAccount p_account=(DtPurchasesAccount)iterator.next();
             p_account.setDate(sup.sqlDate(date));
             p_account.setDepartmentId(dept_id);
             p_account.setDescription(type);
             p_account.setPurchaseId(farmerId);
             p_account.setUnits(quantity);
             p_account.setDebit(debit);
             p_account.setCredit(0.0); 
             session.update(p_account);
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Farmer Record Updated successfully</FONT></HTML>");
         }
         tx.commit();
         state=true;         
         JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.INFORMATION_MESSAGE);
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.INFORMATION_MESSAGE);
      }finally {
         session.close(); 
      }
      return state;
   }
    
    public void collec_display(int val,String fid,Date date1,Date date2,int upperlimit) {
    try {
        String hql;
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        switch(val){
            case 0:
                hql="from DtCoffeCollection c WHERE c.date between :date1 and :date2 order by id asc";
                break;  
                        
            case 1:
                hql="from DtCoffeCollection c WHERE c.farmerId=:id AND c.date between :date1 and :date2 order by id desc";
                break;
            default:
                hql="from DtCoffeCollection c WHERE c.date between :date1 and :date2 order by id asc";
                break;        
    }
        Query q = session.createQuery(hql);
        q.setDate("date1", date1);
        q.setDate("date2", date2);        
        if(val==1)
            q.setParameter("id", fid);
        q.setFirstResult(upperlimit);
        q.setMaxResults(30);
        List resultList = q.list();
        displayResult(resultList);
        session.getTransaction().commit();
    } catch (HibernateException he) {
        he.printStackTrace();
    }
}
    
    private void displayResult(List resultList) {
    Vector tableData = new Vector();
    total=0.0;
    String header[]={"Record","id","Name","Date","Type","Quantity","Attendant","",""};
    Vector<String> tableHeaders= new Vector<>();
    tableHeaders.addAll(Arrays.asList(header));
    for(Object o : resultList) {
        
        DtCoffeCollection collection = (DtCoffeCollection)o;
        Vector<Object> oneRow = new Vector<>();
        List col=Arrays.asList(collection.getId(),
                               collection.getFarmerId(),
                               sup.Farmer_name(collection.getFarmerId()),
                               collection.getDate(),
                               collection.getType(),
                               collection.getQuantity(),
                               collection.getAttendant(),
                               "edit",
                               "delete");
        total+=collection.getQuantity();
        oneRow.addAll(col);
        tableData.add(oneRow);
    }
    if(resultList.isEmpty()){
       farmer_model=new DefaultTableModel(new String[20][9],header);   
    }else{
        farmer_model=new DefaultTableModel(tableData, tableHeaders);
        jLabel17.setText(String.valueOf(total));
    }
}
    
    public void fillFields(DtFarmerdetails details){
       lbl_Fid.setText(details.getMno());
       lbl_Faddress.setText(details.getPaddress());
       lbl_Fname.setText(details.getFname()+" "+details.getLname());
       lbl_Fphone.setText(details.getPphone());
       lbl_age.setText(String.valueOf(new superCls().getDateDiff(new superCls().StringToDate(details.getDob()),new Date(),"YEARS")));
       lbl_sex.setText(details.getGender());        
    }
    
    public void resetFields(){
       lbl_Fid.setText("");
       lbl_Faddress.setText("");
       lbl_Fname.setText("");
       lbl_Fphone.setText("");
       lbl_age.setText("");
       lbl_sex.setText(""); 
       txtquantity.setText("0.00");
//       type=null;
//       cmbtype.removeAll();
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbtype;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox3;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel lbl_Faddress;
    private javax.swing.JLabel lbl_Fid;
    private javax.swing.JLabel lbl_Fname;
    private javax.swing.JLabel lbl_Fphone;
    private javax.swing.JLabel lbl_age;
    private javax.swing.JLabel lbl_sex;
    private javax.swing.JTextField txtquantity;
    // End of variables declaration//GEN-END:variables
}
