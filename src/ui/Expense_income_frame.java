/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ui;

import ca.odell.glazedlists.GlazedLists;
import ca.odell.glazedlists.swing.AutoCompleteSupport;
import classes.ColumnResizer;
import classes.TextAreaRenderer;
import classes.labelRenderer;
import classes.superCls;
import custom_jPanels.BeveledGradientPanel;
import farm.entity.DtAccountStatement;
import farm.entity.DtDepartment;
import farm.entity.DtExpenseAccount;
import farm.entity.DtIncomeAccount;
import farmTech.util.HibernateUtil;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;
import java.awt.*;

/**
 *
 * @author Kent
 */
public class Expense_income_frame extends javax.swing.JInternalFrame {

    /**
     * Creates new form Expense_income_frame
     */
    superCls sup=new superCls();
    DtDepartment depts;
    private JLabel errorFields;
    private Object[] id,cod,code;
    DtExpenseAccount expense;
    DtIncomeAccount income;
    private int idno=0,index=0;;
    private DefaultTableModel farmer_model;
    private AutoCompleteSupport type=null,acs=null;
    public Expense_income_frame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private DefaultComboBoxModel accs (String code) {                 
       int i=0;
       DefaultComboBoxModel tmodel =new DefaultComboBoxModel();
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
      try {        
           session.beginTransaction();
           Query q = session.createQuery("Select Distinct acc.bankName,acc.deptId from DtBankAccounts acc WHERE acc.deptId=:deptid");
           q.setParameter("deptid", code);
           List<Object[]> rows = q.list();
           cod=new Object[rows.size()];
           for(Object[] row : rows){ 
                 tmodel.addElement(row[0]); 
           }
           session.getTransaction().commit();
         }catch (HibernateException he) {
                 errorFields = new JLabel("<HTML><FONT COLOR = Blue>2'"+he.getMessage()+"'</FONT></HTML>");
                 JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE);

         }finally {
             session.close(); 
         }
          return tmodel;
    }
    
    private DefaultComboBoxModel bank_accs (String code,String bank) {                 
       int i=0;
       DefaultComboBoxModel tmodel =new DefaultComboBoxModel();
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
      try {        
           session.beginTransaction();
           Query q = session.createQuery("Select acc.account,acc.deptId from DtBankAccounts acc WHERE acc.deptId=:deptid and acc.bankName=:bank");
           q.setParameter("deptid", code);
           q.setParameter("bank", bank);
           List<Object[]> rows = q.list();
           cod=new Object[rows.size()];
           for(Object[] row : rows){ 
                 tmodel.addElement(row[0]); 
           }
           session.getTransaction().commit();
         }catch (HibernateException he) {
                 errorFields = new JLabel("<HTML><FONT COLOR = Blue>2'"+he.getMessage()+"'</FONT></HTML>");
                 JOptionPane.showMessageDialog(null,errorFields,"DMS2",JOptionPane.ERROR_MESSAGE);

         }finally {
             session.close(); 
         }
          return tmodel;
    }
    
     private DefaultComboBoxModel depts () {                 
       int i=0;
       DefaultComboBoxModel tmodel =new DefaultComboBoxModel();
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
      try {        
           session.beginTransaction();
           Query q = session.createQuery("Select dept.code,dept.deptName from DtDepartment dept");
           List<Object[]> rows = q.list();
           id=new Object[rows.size()];
           for(Object[] row : rows){ 
               id[i]=row[0];
               tmodel.addElement(row[1]);                  
               i++;         
           }
           session.getTransaction().commit();
         }catch (HibernateException he) {
                 errorFields = new JLabel("<HTML><FONT COLOR = Blue>'"+he.getMessage()+"'</FONT></HTML>");
                 JOptionPane.showMessageDialog(null,errorFields,"DMS1",JOptionPane.ERROR_MESSAGE);

         }finally {
             session.close(); 
         }
          return tmodel;
    }
     
     private DefaultComboBoxModel codes (String type) {                 
       int i=0;
       DefaultComboBoxModel tmodel =new DefaultComboBoxModel();
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
      try {        
           session.beginTransaction();
           Query q = session.createQuery("Select Distinct c.description, c.code from DtCodes c where c.type=:type");
           q.setParameter("type", type);
           List<Object[]> rows = q.list();
           code=new Object[rows.size()];
           for(Object[] row : rows){ 
               code[i]=row[1];
               tmodel.addElement(row[0]);                  
               i++;         
           }
           session.getTransaction().commit();
         }catch (HibernateException he) {
                 errorFields = new JLabel("<HTML><FONT COLOR = Blue>'"+he.getMessage()+"'</FONT></HTML>");
                 JOptionPane.showMessageDialog(null,errorFields,"DMS1",JOptionPane.ERROR_MESSAGE);

         }finally {
             session.close(); 
         }
          return tmodel;
    }
     
      public boolean expense_save(int id,Date date, String deptId, String description, double amount,String pmtype, String chequeNo, String bank, String account,double debit, double credit){
      Session session = HibernateUtil.getSessionFactory().openSession();
      Transaction tx = null;
      String farmerID = null;
      boolean state=false;
      try{
         tx = session.beginTransaction();
         Query q = session.createQuery("FROM DtExpenseAccount exp WHERE exp.id=:id or exp.deptId=:deptid and exp.description=:desc and exp.date=:date");
         q.setParameter("deptid", deptId);
         q.setParameter("desc", description);
         q.setParameter("date", date);
         q.setParameter("id", id);
         List results=q.list();
         Iterator iterator=results.iterator();         
         if(!iterator.hasNext()){
            DtExpenseAccount dept_save=new DtExpenseAccount(id,date, deptId, description, amount,pmtype, chequeNo, bank, account, credit, amount) ; 
            session.save(dept_save); 
            errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Transaction completed successfully</FONT></HTML>");
         }else{ 
             DtExpenseAccount exp=(DtExpenseAccount)iterator.next();
             exp.setAmount(amount);
             exp.setDate(date);
             exp.setAccount(account);
             exp.setBank(bank);
             exp.setChequeNo(chequeNo);
             exp.setCredit(credit);
             exp.setDebit(amount);
             session.update(exp);
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Transaction Updated successfully</FONT></HTML>");
         }
         tx.commit();
         state=true;         
         JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.INFORMATION_MESSAGE);
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.INFORMATION_MESSAGE);
      }finally {
         session.close(); 
      }
      return state;
   }
      
      public boolean income_save(int id,Date date, String deptId, String description, double amount,String pmtype, String chequeNo, String bank, String account,double debit, double credit){
      Session session = HibernateUtil.getSessionFactory().openSession();
      Transaction tx = null;
      boolean state=false;
      try{
         tx = session.beginTransaction();
         Query q = session.createQuery("FROM DtIncomeAccount exp WHERE  exp.deptId=:deptid and exp.description=:desc and exp.date=:date or exp.id=:id");
         q.setParameter("deptid", deptId);
         q.setParameter("desc", description);
         q.setParameter("date", date);
         q.setParameter("id", id);
         List results=q.list();
         Iterator iterator=results.iterator();         
         if(!iterator.hasNext()){
            DtIncomeAccount dept_save=new DtIncomeAccount(id,date, deptId, description, amount,pmtype, chequeNo, bank, account, amount,credit) ; 
            session.save(dept_save); 
            errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Transaction completed successfully</FONT></HTML>");
         }else{ 
             DtIncomeAccount exp=(DtIncomeAccount)iterator.next();
             exp.setAmount(amount);
             exp.setDate(date);
             session.update(exp);
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Transaction Updated successfully</FONT></HTML>");
         }
         tx.commit();
         state=true;         
         JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.INFORMATION_MESSAGE);
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"DMS3",JOptionPane.INFORMATION_MESSAGE);
      }finally {
         session.close(); 
      }
      return state;
   }
      
      public boolean account_save(Integer id, Date date, String pmtype, String chequeNo, String bank, String account, double debit, double credit){
      Session session = HibernateUtil.getSessionFactory().openSession();
      Transaction tx = null;
      boolean state=false;
      try{
         tx = session.beginTransaction();
         Query q = session.createQuery("FROM DtAccountStatement state WHERE  state.id=:id");
         q.setParameter("id", id);
         List results=q.list();
         Iterator iterator=results.iterator();         
         if(!iterator.hasNext()){
            DtAccountStatement acc_state=new DtAccountStatement(id, date, pmtype, chequeNo, bank, account, debit, credit) ; 
            session.save(acc_state); 
            errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Transaction completed successfully</FONT></HTML>");
         }else{ 
             DtAccountStatement  acc=(DtAccountStatement)iterator.next();
             acc.setAccount(account);
             acc.setBank(bank);
             acc.setChequeNo(chequeNo);
             acc.setCredit(credit);
             acc.setDebit(debit);
             acc.setPmtype(pmtype);
             session.update(acc);
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Transaction Updated successfully</FONT></HTML>");
         }
         tx.commit();
         state=true;         
         JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.INFORMATION_MESSAGE);
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"DMS4",JOptionPane.INFORMATION_MESSAGE);
      }finally {
         session.close(); 
      }
      return state;
   }
     
    
     public void formload(){
//        this.userid=userid;
//        resetfields();  
        index=0;
        jComboBox6.setModel(new superCls().pagination("DtExpenseAccount"));
        expenses_display(0,0);
        jTable1.setModel(farmer_model);
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
            jTable1.getColumnModel().getColumn(2).setCellRenderer( new  TextAreaRenderer());    
            jTable1.getColumnModel().getColumn(6).setCellRenderer( new  labelRenderer());
            jTable1.getColumnModel().getColumn(7).setCellRenderer( new  labelRenderer());
            ColumnResizer.adjustColumnPreferredWidths (jTable1);
            jTable1.revalidate();
         }});
        
       try{
         if(type==null||!type.isInstalled()){
            type=AutoCompleteSupport.install(jComboBox1, GlazedLists.eventListOf(sup.getElements(depts())));   
         }
         }catch(Exception ex){
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+ex.getMessage()+"'</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"DMS4",JOptionPane.ERROR_MESSAGE);                  
         }
    }
    
     public void resetfields(){
        jComboBox1.setSelectedIndex(-1);
        txtcode.setText("");
        txtAmount.setText("");
        jComboBox3.setSelectedItem(0);
        txt_cheque.setText("");
        jComboBox4.setSelectedIndex(-1);
        jComboBox5.setSelectedIndex(-1);
        taxtarea.setText("");    
     }
     
   public void expenses_display(int val,int upperlimit) {
    try {
        String hql;
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        switch(val){
            case 0:
                hql="from DtExpenseAccount c order by c.id desc";
                break;  
                        
            case 1:
                hql="from DtIncomeAccount c order by c.id desc";
                break;
            default:
                hql="from DtIncomeAccount c order by c.id asc";
                break;        
    }
        Query q = session.createQuery(hql);    
//        if(val==1)
//            q.setParameter("id", id);
        q.setFirstResult(upperlimit);
        q.setMaxResults(30);
        List resultList = q.list();
        displayResult(resultList,val);
        session.getTransaction().commit();
    } catch (HibernateException he) {
         errorFields = new JLabel("<HTML><FONT COLOR = Blue>'"+he.getMessage()+"'</FONT></HTML>");
         JOptionPane.showMessageDialog(null,errorFields,"DMS5",JOptionPane.ERROR_MESSAGE);
//            he.printStackTrace();
    }
}
    
    private void displayResult(List resultList,int val) {
    Vector tableData = new Vector();
//    total=0.0;
    String header[]={"id","Date","Description","Code","DR","CR","",""};
    Vector<String> tableHeaders= new Vector<>();
    tableHeaders.addAll(Arrays.asList(header));
    for(Object o : resultList) {
        if(val==0){
           DtExpenseAccount collection = (DtExpenseAccount)o;
           Vector<Object> oneRow = new Vector<>();
           List col=Arrays.asList(collection.getId(),
                               collection.getDate(),
                               collection.getDescription(),
                               collection.getDeptId(),
                               collection.getAmount(),
                               "0.0",
                               "edit",
                               "delete");
           oneRow.addAll(col);
           tableData.add(oneRow);
        }else{ 
            DtIncomeAccount collection = (DtIncomeAccount)o;
            Vector<Object> oneRow = new Vector<>();
            List col=Arrays.asList(collection.getId(),
                               collection.getDate(),
                               collection.getDescription(),
                               collection.getDeptId(),
                               collection.getAmount(),
                               "0.0",
                               "edit",
                               "delete");
            oneRow.addAll(col);
          tableData.add(oneRow);
        }
        
//        total+=collection.getQuantity();
        
    }
    if(resultList.isEmpty()){
       farmer_model=new DefaultTableModel(new String[20][8],header);   
    }else{
        farmer_model=new DefaultTableModel(tableData, tableHeaders);
//        jLabel17.setText(String.valueOf(total));
    }
}
    
    private String getDepts (String code) {                 
       int i=0;
       String name ="";
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
      try {        
           session.beginTransaction();
           Query q = session.createQuery("Select dept.id,dept.deptName from DtDepartment dept");
           List<Object[]> rows = q.list();
           for(Object[] row : rows){ 
               name=row[1].toString();                 
           }
           session.getTransaction().commit();
         }catch (HibernateException he) {
                 errorFields = new JLabel("<HTML><FONT COLOR = Blue>'"+he.getMessage()+"'</FONT></HTML>");
                 JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE);

         }finally {
             session.close(); 
         }
          return name;
    }
    
    public void delete(int id){
       Session session = HibernateUtil.getSessionFactory().openSession();
       Transaction tx = null;
       String farmername="";
      try{
         tx = session.beginTransaction();
         if(index==0){
             expense = (DtExpenseAccount)session.get(DtExpenseAccount.class, id);
             session.delete(expense);
         }else{
             income = (DtIncomeAccount)session.get(DtIncomeAccount.class, id); 
             session.delete(income);
         }
         tx.commit();
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
         errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
         JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE);  
      }finally {
         session.close(); 
      }
   }
    
    public void edit_record(int id){
        Session session = HibernateUtil.getSessionFactory().openSession();
       Transaction tx = null;
       String farmername="";
      try{
         tx = session.beginTransaction();
         if(index==0){
             expense = (DtExpenseAccount)session.get(DtExpenseAccount.class, id);
             setExpenseFields();
         }else{
             income = (DtIncomeAccount)session.get(DtIncomeAccount.class, id); 
             setIncomeFields();
         }
         tx.commit();
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
         JLabel errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
         JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE);  
      }finally {
         session.close(); 
      }      
    }
    
    
    public void setIncomeFields(){
//        DtIncomeAccount income=(DtIncomeAccount)o;
        String code="";
        jComboBox1.setSelectedItem(getDepts(income.getDeptId()));
        jComboBox2.setSelectedIndex(index);
        int idx=income.getDeptId().indexOf("-");
        if(idx!=-1){
            idx++;
            code=income.getDeptId().substring(idx, income.getDeptId().length());
        }
          
        txtcode.setText(code);
        txtAmount.setText(sup.getCostValue(income.getAmount()));
        jComboBox3.setSelectedItem(income.getPmtype());
        txt_cheque.setText(income.getChequeNo());
        jComboBox4.setSelectedItem(income.getBank());
        jComboBox5.setSelectedItem(income.getAccount());
        taxtarea.setText(income.getDescription());       
    }
    
    public void setExpenseFields(){
//        DtExpenseAccount expense=(DtExpenseAccount)o;
        String code="";
        jComboBox1.setSelectedItem(getDepts(expense.getDeptId()));
        jComboBox2.setSelectedIndex(index);
        int idx=expense.getDeptId().indexOf("-");
        if(idx!=-1){   
            idx++;
            code=expense.getDeptId().substring(idx, expense.getDeptId().length());
        }
          
        txtcode.setText(code);
        txtAmount.setText(sup.getCostValue(expense.getAmount()));
        jComboBox3.setSelectedItem(expense.getPmtype());
        txt_cheque.setText(expense.getChequeNo());
        jComboBox4.setSelectedItem(expense.getBank());
        jComboBox5.setSelectedItem(expense.getAccount());
        taxtarea.setText(expense.getDescription());       
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new BeveledGradientPanel(new Color(240, 240, 240),new Color(240, 240, 240));
        this.pack();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        txtAmount = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taxtarea = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        txt_cheque = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        txtcode = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jButton3 = new javax.swing.JButton();
        jComboBox6 = new javax.swing.JComboBox();
        jButton4 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jComboBox7 = new javax.swing.JComboBox();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setTitle("Income_Expense Account");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ox-cow.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel1.setText("Department :");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel2.setText("Type :");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel3.setText("Amount (Ksh.)");

        jComboBox1.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jComboBox2.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Expense", "Income" }));
        jComboBox2.setSelectedIndex(-1);
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });

        txtAmount.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        txtAmount.setText("0.0");
        txtAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAmountKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel4.setText("Description :");

        taxtarea.setColumns(20);
        taxtarea.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        taxtarea.setRows(5);
        jScrollPane1.setViewportView(taxtarea);

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "Date", "Description", "code", "DR", "CR", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel5.setText("Type of Payment:");

        jComboBox3.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cash", "Cheque" }));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel6.setText("Cheque no :");

        txt_cheque.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        txt_cheque.setToolTipText("");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel7.setText("Bank :");

        jComboBox4.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jComboBox4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox4ItemStateChanged(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel8.setText("Acc. No :");

        jComboBox5.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel9.setText("Code :");

        txtcode.setToolTipText("");

        jButton2.setText("New");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel10.setText("Date :");

        jDateChooser1.setDate(new Date());
        jDateChooser1.setDateFormatString("dd-MM-yyyy");

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow_right.gif"))); // NOI18N
        jButton3.setText("Next");
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox6.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox6ItemStateChanged(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow_left.gif"))); // NOI18N
        jButton4.setText("Previous");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel11.setText("Desc :");

        jComboBox7.setEditable(true);
        jComboBox7.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox7ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_cheque, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel11)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtcode, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(txtcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)
                        .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_cheque, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String dept=sup.getValue(jComboBox1.getSelectedItem());
        String code1=sup.getValue(id[jComboBox1.getSelectedIndex()]);
        String type=sup.getValue(jComboBox2.getSelectedItem());
        String code=txtcode.getText();
        double amount=Double.parseDouble(sup.getCostValue(txtAmount.getText()));
        String pmtype=sup.getValue(jComboBox3.getSelectedItem());
        String chequeNo=txt_cheque.getText();
        String bank = sup.getValue(jComboBox4.getSelectedItem());
        String account= sup.getValue(jComboBox5.getSelectedItem());
        String description= taxtarea.getText();       
        String date=new SimpleDateFormat("dd-MM-yyyy").format(jDateChooser1.getDate());
        if(!code1.equals(""))
            code=code1+"-"+code;            
        if(!dept.equals("") && amount!=0.0 && !code.equals("")){
            if(type.equals("Expense")){
                expense_save(idno,sup.sqlDate(date),code , description, amount,pmtype, chequeNo, bank, account, 0.0, amount);
//                    this.account_save(idno, sup.sqlDate(date), pmtype, chequeNo, bank, account, amount, 0.0);
                index=0;
                jComboBox6.setModel(new superCls().pagination("DtExpenseAccount"));
            }else{
                income_save(idno,sup.sqlDate(date),code , description, amount,pmtype, chequeNo, bank, account, amount, 0.0);
//                    this.account_save(idno, sup.sqlDate(date), pmtype, chequeNo, bank, account, 0.0,amount); 
                index=1;
                jComboBox6.setModel(new superCls().pagination("DtIncomeAccount"));
            }
            idno=0;
        }else{
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>Please make sure required fields are filled!</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"DMS",JOptionPane.ERROR_MESSAGE);
        }
        expenses_display(index,0);
        jTable1.setModel(farmer_model);
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
            jTable1.getColumnModel().getColumn(2).setCellRenderer( new  TextAreaRenderer());    
            jTable1.getColumnModel().getColumn(6).setCellRenderer( new  labelRenderer());
            jTable1.getColumnModel().getColumn(7).setCellRenderer( new  labelRenderer());
            ColumnResizer.adjustColumnPreferredWidths (jTable1);
            jTable1.revalidate();
         }});
    }//GEN-LAST:event_jButton1ActionPerformed

    
    
    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        int idex=jComboBox1.getSelectedIndex();
        if(idex!=-1){
            String code = String.valueOf(id[idex]);
            jComboBox4.setModel(accs(code));
            jComboBox4.setSelectedIndex(-1);
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox4ItemStateChanged
        // TODO add your handling code here:
        int idex=jComboBox4.getSelectedIndex();
        if(idex!=-1){
            String idx=sup.getValue(id[jComboBox1.getSelectedIndex()]);
            String bankname = sup.getValue(jComboBox4.getSelectedItem());
            jComboBox5.setModel(bank_accs(idx,bankname));
        }
    }//GEN-LAST:event_jComboBox4ItemStateChanged

    private void txtAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmountKeyTyped
        // TODO add your handling code here:
        sup.field_validation(txtAmount, evt);
    }//GEN-LAST:event_txtAmountKeyTyped

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
         int col=jTable1.getSelectedColumn();
//        String date=new SimpleDateFormat("dd-MM-yyyy").format(jDateChooser1.getDate());
        int row=jTable1.getSelectedRow();
        String farmerid=sup.getValue(jTable1.getValueAt(row, 1));
        String type=sup.getValue(jTable1.getValueAt(row, 4));
        String date=sup.getValue(jTable1.getValueAt(row, 1));
        idno=Integer.parseInt(sup.getIntValue(jTable1.getValueAt(row, 0)));
        if(col==6){
              edit_record(idno);
             jDateChooser1.setDate(sup.StringToJDate(sup.getValue(date)));
        }
        if(col==7){
            int  result = JOptionPane.showInternalConfirmDialog(this,"Are you sure you want Delete This Record!","Dairy Management System",JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE );
            if(result==JOptionPane.OK_OPTION){
               delete(idno);
               DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
                model.removeRow(row);
            }
//                jLabel17.setText(String.valueOf(total));
            }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        resetfields();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox6ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox6ItemStateChanged
        // TODO add your handling code here:
        int value=Integer.parseInt(new superCls().getIntValue(jComboBox6.getSelectedItem())),upperlimit=30;
        if(value>0)
           upperlimit=(value)*upperlimit;
        else
          upperlimit=0;
          
        expenses_display(index,0);
        jTable1.setModel(farmer_model);
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
            jTable1.getColumnModel().getColumn(2).setCellRenderer( new  TextAreaRenderer());    
            jTable1.getColumnModel().getColumn(6).setCellRenderer( new  labelRenderer());
            jTable1.getColumnModel().getColumn(7).setCellRenderer( new  labelRenderer());
            ColumnResizer.adjustColumnPreferredWidths (jTable1);
            jTable1.revalidate();
         }});  
           
    }//GEN-LAST:event_jComboBox6ItemStateChanged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int value=Integer.parseInt(new superCls().getIntValue(jComboBox6.getSelectedIndex()));
        int max=jComboBox6.getItemCount();
        int upperlimit=30;
        if(value!=0){
            value--;
            jComboBox6.setSelectedItem(value);
        }else{
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int value=Integer.parseInt(new superCls().getIntValue(jComboBox6.getSelectedIndex()));
        int max=jComboBox6.getItemCount();
        int upperlimit=30;
        if(value!=max){
            value++;
            jComboBox6.setSelectedItem(value);
        }else{
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        // TODO add your handling code here:
        int idz=jComboBox2.getSelectedIndex();{
        if(idz!=-1){
            String type=sup.getValue(jComboBox2.getSelectedItem());
            jComboBox7.setModel(codes(type));
            jComboBox7.setSelectedIndex(-1);
        }
    }
        
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jComboBox7ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox7ItemStateChanged
        // TODO add your handling code here:
        int idz=jComboBox7.getSelectedIndex();
        int idx=jComboBox2.getSelectedIndex();
        if(idz!=-1&& idx!=-1){
           String co=id[idx]+"-"+code[idz];
           txtcode.setText(co);
           taxtarea.setText(sup.getValue(jComboBox7.getSelectedItem()));
        }
    }//GEN-LAST:event_jComboBox7ItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JComboBox jComboBox7;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea taxtarea;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txt_cheque;
    private javax.swing.JTextField txtcode;
    // End of variables declaration//GEN-END:variables
}
