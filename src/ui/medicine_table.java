/*
 * Copyright (c) 2015, Kent
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
package ui;

import classes.ColumnResizer;
import classes.DecimalFormatRenderer;
import classes.labelRenderer;
import classes.superCls;
import custom_jPanels.RoundRectGradientPanel;
import farm.entity.DtInventoryItemlist;
import farm.entity.DtProduct;
import farm.entity.DtSuppliers;
import farmTech.util.HibernateUtil;
import java.awt.CardLayout;
import java.awt.Frame;
import java.awt.event.ItemEvent;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.getFrameForComponent;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 *
 * @author Kent
 */
public class medicine_table extends javax.swing.JInternalFrame {
private JLabel errorFields;
private DefaultTableModel product_model;
private DtInventoryItemlist product;
private superCls sup=new superCls();
private CardLayout cardlayout;
private Object[] supp_id,supplierID;

private String productName,productCode,units,category,supplierName,description;
private double sp,discount,vat,price,cost;
    /**
     * Creates new form productList
     */
    public medicine_table() {
        initComponents();
    }

    public void formload(){
        SwingWorker doComputeRate=new SwingWorker() {
                  @Override
	          protected Integer doInBackground() throws Exception{
                    product_display(0,"",0);
                    jTable5.setModel(product_model);
                    cmb_supplier.setModel(supplier("All"));
                  return 0;
	        }
                @Override
                protected void done(){
                     SwingUtilities.invokeLater(new Runnable() {
                       public void run() {           
//                        jTable5.getColumnModel().getColumn(3).setCellRenderer( new  TextAreaRenderer());   
                        jTable5.getColumnModel().getColumn(3).setCellRenderer( new  labelRenderer());
                        jTable5.removeColumn(jTable5.getColumnModel().getColumn(8));
                        jTable5.getColumnModel().getColumn(4).setCellRenderer(new DecimalFormatRenderer());
                        jTable5.getColumnModel().getColumn(6).setCellRenderer(new DecimalFormatRenderer());
                        jTable5.getColumnModel().getColumn(8).setCellRenderer(new DecimalFormatRenderer());
                        ColumnResizer.adjustColumnPreferredWidths (jTable5);
                        jTable5.revalidate();
                    }});
                }
        };
        doComputeRate.execute();
        cmb_supplier.setSelectedIndex(-1);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new RoundRectGradientPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jLabel43 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        cmb_supplier = new javax.swing.JComboBox();
        txt_product = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setTitle("Registered Store Items");
        setToolTipText("");

        jPanel4.setName("card2"); // NOI18N

        jTable5.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable5.setGridColor(new java.awt.Color(204, 204, 204));
        jTable5.setRowHeight(17);
        jTable5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable5MouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jTable5);

        jLabel43.setText("Search Product :");

        jLabel2.setText("Supplier Name:");

        cmb_supplier.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_supplierItemStateChanged(evt);
            }
        });

        txt_product.setToolTipText("");
        txt_product.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_productFocusGained(evt);
            }
        });

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(153, 0, 102));
        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 255));
        jLabel1.setText("Product List");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6)
                    .addComponent(jSeparator8)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_product, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmb_supplier, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 142, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_product, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)
                        .addComponent(jLabel43))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jLabel2))
                        .addComponent(cmb_supplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable5MouseClicked
        // TODO add your handling code here:
        int col=jTable5.getSelectedColumn();
        int row=jTable5.getSelectedRow();
        String name=sup.getValue((jTable5.getValueAt(row, 1)));
        String code=sup.getValue(jTable5.getValueAt(row, 2));  
        String descrip=sup.getValue(jTable5.getValueAt(row, 3));  
        double price1=Double.parseDouble(sup.getCostValue(jTable5.getValueAt(row, 4)));
        double discount1=Double.parseDouble(sup.getCostValue(jTable5.getValueAt(row, 5)));
        double vat1=Double.parseDouble(sup.getCostValue(jTable5.getValueAt(row, 6)));
        String supp_code=sup.getValue((jTable5.getValueAt(row, 7)));
        double cost1=Double.parseDouble(sup.getCostValue(jTable5.getModel().getValueAt(row, 8)));
        
        DefaultTableModel model=(DefaultTableModel)jTable5.getModel();
        
        
        if(col==9 && col!=-1){
            if(deleteProduct(code)){
               model.removeRow(row);
            }
        }        
        if(col!=-1 && col!=9){
            this.setProductCode(code);
            this.setProductName(name);
            this.setDescription(descrip);
            this.setVat(vat1);
            this.setDiscount(discount1);
            this.setSp(price1);
            this.setCost(cost1);
            Frame frame=getFrameForComponent(this.getParent());
            frame.dispose();
        }
    }//GEN-LAST:event_jTable5MouseClicked

    private void txt_productFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_productFocusGained
        // TODO add your handling code here:
        txt_product.selectAll();
    }//GEN-LAST:event_txt_productFocusGained

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        final String product=txt_product.getText();
        if(!product.equals("")){
            SwingWorker doComputeRate=new SwingWorker() {
                  @Override
	          protected Integer doInBackground() throws Exception{
                    product_display(2,product,0);
                    jTable5.setModel(product_model);
                  return 0;
	        }
                @Override
                protected void done(){
                     SwingUtilities.invokeLater(new Runnable() {
                       public void run() {   
//                        jTable5.getColumnModel().getColumn(3).setCellRenderer( new  TextAreaRenderer());      
                        jTable5.getColumnModel().getColumn(3).setCellRenderer( new  labelRenderer());
                        jTable5.removeColumn(jTable5.getColumnModel().getColumn(8));
                        jTable5.getColumnModel().getColumn(4).setCellRenderer(new DecimalFormatRenderer());
                        jTable5.getColumnModel().getColumn(6).setCellRenderer(new DecimalFormatRenderer());
                        jTable5.getColumnModel().getColumn(8).setCellRenderer(new DecimalFormatRenderer());
                        ColumnResizer.adjustColumnPreferredWidths (jTable5);
                        jTable5.revalidate();
                    }});
                }
        };
        doComputeRate.execute();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmb_supplierItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_supplierItemStateChanged
        // TODO add your handling code here:
        final String supplier=sup.getValue(cmb_supplier.getSelectedItem());
        int evtID=evt.getStateChange();
           if(!supplier.equals("") && evtID==ItemEvent.SELECTED){
            SwingWorker doComputeRate=new SwingWorker() {
                  @Override
	          protected Integer doInBackground() throws Exception{
                    product_display(1,supplier,0);
                    jTable5.setModel(product_model);
                  return 0;
	        }
                @Override
                protected void done(){
                     SwingUtilities.invokeLater(new Runnable() {
                       public void run() {                                                          
                        jTable5.getColumnModel().getColumn(3).setCellRenderer( new  labelRenderer());
                        jTable5.removeColumn(jTable5.getColumnModel().getColumn(8));
                        jTable5.getColumnModel().getColumn(4).setCellRenderer(new DecimalFormatRenderer());
                        jTable5.getColumnModel().getColumn(6).setCellRenderer(new DecimalFormatRenderer());
                        jTable5.getColumnModel().getColumn(8).setCellRenderer(new DecimalFormatRenderer());
                        ColumnResizer.adjustColumnPreferredWidths (jTable5);
                        jTable5.revalidate();
                    }});
                }
        };
        doComputeRate.execute();
        } 
    }//GEN-LAST:event_cmb_supplierItemStateChanged

private boolean deleteProduct(String id){
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
       Transaction tx = null;
       boolean status=false;
      try{
         tx = session.beginTransaction();
         DtProduct product = (DtProduct)session.get(DtProduct.class, id); 
         if(product!=null)
            session.delete(product);
         tx.commit();
         status=true;
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"Clinic Management System",JOptionPane.ERROR_MESSAGE); 
      }finally {
         session.close(); 
      }
     return status;
   }

private void product_display(int val,String name,int upperlimit) {
    Session session = HibernateUtil.getSessionFactory().openSession();
    try {
        session = HibernateUtil.getSessionFactory().openSession();
        String hql;        
        session.beginTransaction();
        switch(val){
            case 0:
                hql="Select DISTINCT m.itemName, m.productCode, m.description, m.unitPrice, m.discount, m.vat, m.supplierCode, m.unitCost from DtInventoryItemlist m ORDER BY m.itemName";
                break;
            case 1:
                hql="Select DISTINCT m.itemName, m.productCode, m.description, m.unitPrice, m.discount, m.vat, m.supplierCode, m.unitCost from DtInventoryItemlist m WHERE s.supplierCode=:name ORDER by m.itemName ASC";
                break;
            case 2:
                hql="Select DISTINCT m.itemName, m.productCode, m.description, m.unitPrice, m.discount, m.vat, m.supplierCode, m.unitCost from DtInventoryItemlist m WHERE m.itemName LIKE :name GROUP BY m.supplierCode, s.id ORDER by m.itemName ASC";
                break;    
            default:
                hql="Select DISTINCT m.itemName, m.productCode, m.description, m.unitPrice, m.discount, m.vat, m.supplierCode,m.unitCost from DtInventoryItemlist m ORDER BY m.itemName";
                break;
    }
        Query q = session.createQuery(hql);
        if(val==1)
            q.setParameter("name", name);
        if(val==2)
            q.setParameter("name", '%'+name+'%');
        q.setFirstResult(upperlimit);
        q.setMaxResults(30);
        q.setCacheable(true);
        List resultList = q.list();
        displayAssets(resultList);        
        session.getTransaction().commit();
    } catch (HibernateException he) {
        errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+he.getMessage()+"'</FONT></HTML>");
        JOptionPane.showMessageDialog(null,errorFields,"Clinic Management System",JOptionPane.ERROR_MESSAGE); 
    }
    finally {
             session.close(); 
         }    
   }
 
   private void displayAssets(List resultList) {
       int i=0;
    Vector tableData = new Vector();
    String header[]={"Item","Product","Product#","Description","Price","Disc%","VAT","Supplier","Cost",""};
    Vector<String> tableHeaders= new Vector<>();
    tableHeaders.addAll(Arrays.asList(header));
    for(Object o : resultList) {
        
        Object[] collection = (Object[])o;
        Vector<Object> oneRow = new Vector<>();
        List col=Arrays.asList(
                               i++,
                               collection[0],
                               collection[1],
                               collection[2],
                               collection[3],
                               collection[4],
                               collection[5],
                               sup.FindSupplierName(String.valueOf(collection[6])),
                               collection[7]
                               );
                         
        oneRow.addAll(col);
        tableData.add(oneRow);
    }
    if(resultList.isEmpty()){
       product_model=new DefaultTableModel(new String[0][0],header);   
    }else
        product_model=new DefaultTableModel(tableData, tableHeaders);
   }
   
   private void FindProduct(int id){
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
       Transaction tx = null;
       boolean status=false;
      try{
         tx = session.beginTransaction();
         product = (DtInventoryItemlist)session.get(DtInventoryItemlist.class, id); 
         tx.commit();
         status=true;
      }catch (HibernateException e) {
         if (tx!=null) tx.rollback();
             errorFields = new JLabel("<HTML><FONT COLOR = BLUE>'"+e.getMessage()+"'</FONT></HTML>");
             JOptionPane.showMessageDialog(null,errorFields,"csrim",JOptionPane.ERROR_MESSAGE); 
      }finally {
         session.close(); 
      }
   }

   private DefaultComboBoxModel supplier (String type) {                 
       int i=0;
       Query q;
       DefaultComboBoxModel tmodel =new DefaultComboBoxModel();
       org.hibernate.Session session = HibernateUtil.getSessionFactory().openSession();
      try {        
           session.beginTransaction();
           if(type.equals("All"))
             q = session.createQuery("from DtSuppliers s");
           else
              q = session.createQuery("from DtSuppliers s where s.status='Active'"); 
           q.setCacheable(true);
           List auth=q.list();
           Iterator iterator=auth.iterator();
           supp_id=new Object[auth.size()];
           supplierID=new Object[auth.size()];
           while(iterator.hasNext()){ 
                   DtSuppliers supp=(DtSuppliers)iterator.next();
                   tmodel.addElement(supp.getSuppliername()); 
                   supp_id[i]=supp.getId();
                   supplierID[i]=supp.getSupplierId();
                   i++;         
           }
           session.getTransaction().commit();
         }catch (HibernateException he) {
                 errorFields = new JLabel("<HTML><FONT COLOR = Blue>'"+he.getMessage()+"'</FONT></HTML>");
                 JOptionPane.showMessageDialog(null,errorFields,"Clinic Management System",JOptionPane.ERROR_MESSAGE);

         }finally {
             session.close(); 
         }
          return tmodel;
    }

    public String getProductName() {
        return productName;
    }

    public void setProductName(String productName) {
        this.productName = productName;
    }

    public String getProductCode() {
        return productCode;
    }

    public void setProductCode(String productCode) {
        this.productCode = productCode;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public double getSp() {
        return sp;
    }

    public void setSp(double sp) {
        this.sp = sp;
    }

    public double getDiscount() {
        return discount;
    }

    public void setDiscount(double discount) {
        this.discount = discount;
    }

    public double getVat() {
        return vat;
    }

    public void setVat(double vat) {
        this.vat = vat;
    }

    public double getCost() {
        return cost;
    }

    public void setCost(double cost) {
        this.cost = cost;
    }
    
    
   
    
    
    
   
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmb_supplier;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JTable jTable5;
    private javax.swing.JTextField txt_product;
    // End of variables declaration//GEN-END:variables
}
